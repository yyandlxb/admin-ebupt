/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.CollectionLogRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CollectionLog extends TableImpl<CollectionLogRecord> {

    private static final long serialVersionUID = 847426434;

    /**
     * The reference instance of <code>st.collection_log</code>
     */
    public static final CollectionLog COLLECTION_LOG = new CollectionLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CollectionLogRecord> getRecordType() {
        return CollectionLogRecord.class;
    }

    /**
     * The column <code>st.collection_log.id</code>.
     */
    public final TableField<CollectionLogRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>st.collection_log.order_id</code>.
     */
    public final TableField<CollectionLogRecord, Integer> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>st.collection_log.sender_name</code>. 发货人姓名
     */
    public final TableField<CollectionLogRecord, String> SENDER_NAME = createField("sender_name", org.jooq.impl.SQLDataType.VARCHAR(60), this, "发货人姓名");

    /**
     * The column <code>st.collection_log.sender_name_change</code>. 修改后的发货人姓名
     */
    public final TableField<CollectionLogRecord, String> SENDER_NAME_CHANGE = createField("sender_name_change", org.jooq.impl.SQLDataType.VARCHAR(60), this, "修改后的发货人姓名");

    /**
     * The column <code>st.collection_log.sender_phone</code>. 发货人手机号
     */
    public final TableField<CollectionLogRecord, String> SENDER_PHONE = createField("sender_phone", org.jooq.impl.SQLDataType.VARCHAR(20), this, "发货人手机号");

    /**
     * The column <code>st.collection_log.sender_phone_change</code>. 修改后的发货人手机号
     */
    public final TableField<CollectionLogRecord, String> SENDER_PHONE_CHANGE = createField("sender_phone_change", org.jooq.impl.SQLDataType.VARCHAR(20), this, "修改后的发货人手机号");

    /**
     * The column <code>st.collection_log.sender_id_card</code>. 发货人身份证号
     */
    public final TableField<CollectionLogRecord, String> SENDER_ID_CARD = createField("sender_id_card", org.jooq.impl.SQLDataType.VARCHAR(50), this, "发货人身份证号");

    /**
     * The column <code>st.collection_log.sender_id_card_change</code>. 修改后的发货人身份证号
     */
    public final TableField<CollectionLogRecord, String> SENDER_ID_CARD_CHANGE = createField("sender_id_card_change", org.jooq.impl.SQLDataType.VARCHAR(50), this, "修改后的发货人身份证号");

    /**
     * The column <code>st.collection_log.account</code>. 操作账号
     */
    public final TableField<CollectionLogRecord, String> ACCOUNT = createField("account", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "操作账号");

    /**
     * The column <code>st.collection_log.enabled</code>.
     */
    public final TableField<CollectionLogRecord, Boolean> ENABLED = createField("enabled", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'1'", org.jooq.impl.SQLDataType.BIT)), this, "");

    /**
     * The column <code>st.collection_log.created_at</code>.
     */
    public final TableField<CollectionLogRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.collection_log.updated_at</code>.
     */
    public final TableField<CollectionLogRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>st.collection_log</code> table reference
     */
    public CollectionLog() {
        this(DSL.name("collection_log"), null);
    }

    /**
     * Create an aliased <code>st.collection_log</code> table reference
     */
    public CollectionLog(String alias) {
        this(DSL.name(alias), COLLECTION_LOG);
    }

    /**
     * Create an aliased <code>st.collection_log</code> table reference
     */
    public CollectionLog(Name alias) {
        this(alias, COLLECTION_LOG);
    }

    private CollectionLog(Name alias, Table<CollectionLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private CollectionLog(Name alias, Table<CollectionLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.COLLECTION_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CollectionLogRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COLLECTION_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CollectionLogRecord> getPrimaryKey() {
        return Keys.KEY_COLLECTION_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CollectionLogRecord>> getKeys() {
        return Arrays.<UniqueKey<CollectionLogRecord>>asList(Keys.KEY_COLLECTION_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CollectionLog as(String alias) {
        return new CollectionLog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CollectionLog as(Name alias) {
        return new CollectionLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CollectionLog rename(String name) {
        return new CollectionLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CollectionLog rename(Name name) {
        return new CollectionLog(name, null);
    }
}
