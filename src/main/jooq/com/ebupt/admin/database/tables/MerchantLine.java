/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.MerchantLineRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 商户线路
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MerchantLine extends TableImpl<MerchantLineRecord> {

    private static final long serialVersionUID = -294580749;

    /**
     * The reference instance of <code>st.merchant_line</code>
     */
    public static final MerchantLine MERCHANT_LINE = new MerchantLine();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MerchantLineRecord> getRecordType() {
        return MerchantLineRecord.class;
    }

    /**
     * The column <code>st.merchant_line.id</code>.
     */
    public final TableField<MerchantLineRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>st.merchant_line.merchant_id</code>.
     */
    public final TableField<MerchantLineRecord, Integer> MERCHANT_ID = createField("merchant_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>st.merchant_line.line_id</code>.
     */
    public final TableField<MerchantLineRecord, Integer> LINE_ID = createField("line_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>st.merchant_line.address</code>. 地址
     */
    public final TableField<MerchantLineRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "地址");

    /**
     * The column <code>st.merchant_line.phone_number</code>. 电话
     */
    public final TableField<MerchantLineRecord, String> PHONE_NUMBER = createField("phone_number", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "电话");

    /**
     * The column <code>st.merchant_line.manager_phone_number</code>. 负责人电话
     */
    public final TableField<MerchantLineRecord, String> MANAGER_PHONE_NUMBER = createField("manager_phone_number", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "负责人电话");

    /**
     * The column <code>st.merchant_line.enabled</code>.
     */
    public final TableField<MerchantLineRecord, Boolean> ENABLED = createField("enabled", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'1'", org.jooq.impl.SQLDataType.BIT)), this, "");

    /**
     * The column <code>st.merchant_line.created_at</code>.
     */
    public final TableField<MerchantLineRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.merchant_line.updated_at</code>.
     */
    public final TableField<MerchantLineRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.merchant_line.unit_price</code>. 每吨单价
     */
    public final TableField<MerchantLineRecord, BigDecimal> UNIT_PRICE = createField("unit_price", org.jooq.impl.SQLDataType.DECIMAL(15, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "每吨单价");

    /**
     * The column <code>st.merchant_line.open_train</code>. 是否开通班列
     */
    public final TableField<MerchantLineRecord, Boolean> OPEN_TRAIN = createField("open_train", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "是否开通班列");

    /**
     * Create a <code>st.merchant_line</code> table reference
     */
    public MerchantLine() {
        this(DSL.name("merchant_line"), null);
    }

    /**
     * Create an aliased <code>st.merchant_line</code> table reference
     */
    public MerchantLine(String alias) {
        this(DSL.name(alias), MERCHANT_LINE);
    }

    /**
     * Create an aliased <code>st.merchant_line</code> table reference
     */
    public MerchantLine(Name alias) {
        this(alias, MERCHANT_LINE);
    }

    private MerchantLine(Name alias, Table<MerchantLineRecord> aliased) {
        this(alias, aliased, null);
    }

    private MerchantLine(Name alias, Table<MerchantLineRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "商户线路");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MERCHANT_LINE_IDX_MERCHANT_LINE_LINE_ID, Indexes.MERCHANT_LINE_PRIMARY, Indexes.MERCHANT_LINE_UK_MERCHANT_LINE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MerchantLineRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MERCHANT_LINE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MerchantLineRecord> getPrimaryKey() {
        return Keys.KEY_MERCHANT_LINE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MerchantLineRecord>> getKeys() {
        return Arrays.<UniqueKey<MerchantLineRecord>>asList(Keys.KEY_MERCHANT_LINE_PRIMARY, Keys.KEY_MERCHANT_LINE_UK_MERCHANT_LINE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MerchantLine as(String alias) {
        return new MerchantLine(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MerchantLine as(Name alias) {
        return new MerchantLine(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MerchantLine rename(String name) {
        return new MerchantLine(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MerchantLine rename(Name name) {
        return new MerchantLine(name, null);
    }
}
