/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables.records;


import com.ebupt.admin.database.tables.Payment;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentRecord extends UpdatableRecordImpl<PaymentRecord> implements Record12<Integer, String, Integer, Byte, Integer, Timestamp, Byte, String, Timestamp, Timestamp, Timestamp, Integer> {

    private static final long serialVersionUID = 1104087527;

    /**
     * Setter for <code>st.payment.id</code>.
     */
    public PaymentRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>st.payment.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>st.payment.no</code>. 支付单号
     */
    public PaymentRecord setNo(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>st.payment.no</code>. 支付单号
     */
    public String getNo() {
        return (String) get(1);
    }

    /**
     * Setter for <code>st.payment.order_id</code>.
     */
    public PaymentRecord setOrderId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>st.payment.order_id</code>.
     */
    public Integer getOrderId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>st.payment.method</code>. 支付方式。1：微信刷卡支付；2：支付宝条码支付
     */
    public PaymentRecord setMethod(Byte value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>st.payment.method</code>. 支付方式。1：微信刷卡支付；2：支付宝条码支付
     */
    public Byte getMethod() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>st.payment.price</code>. 支付金额，单位为分
     */
    public PaymentRecord setPrice(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>st.payment.price</code>. 支付金额，单位为分
     */
    public Integer getPrice() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>st.payment.expire_time</code>. 支付超时时间
     */
    public PaymentRecord setExpireTime(Timestamp value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>st.payment.expire_time</code>. 支付超时时间
     */
    public Timestamp getExpireTime() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>st.payment.status</code>. 状态。0：未知状态；1：未支付；2：用户支付中，等待确认结果；3：支付成功；4：支付明确返回失败；5：交易过期，用户未在有效期内支付；6：系统主动交易撤销；7：交易发起了退款，等待确认结果；8：该笔支付已退款
     */
    public PaymentRecord setStatus(Byte value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>st.payment.status</code>. 状态。0：未知状态；1：未支付；2：用户支付中，等待确认结果；3：支付成功；4：支付明确返回失败；5：交易过期，用户未在有效期内支付；6：系统主动交易撤销；7：交易发起了退款，等待确认结果；8：该笔支付已退款
     */
    public Byte getStatus() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>st.payment.trade_no</code>. 支付平台交易号
     */
    public PaymentRecord setTradeNo(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>st.payment.trade_no</code>. 支付平台交易号
     */
    public String getTradeNo() {
        return (String) get(7);
    }

    /**
     * Setter for <code>st.payment.paid_at</code>. 实际支付时间
     */
    public PaymentRecord setPaidAt(Timestamp value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>st.payment.paid_at</code>. 实际支付时间
     */
    public Timestamp getPaidAt() {
        return (Timestamp) get(8);
    }

    /**
     * Setter for <code>st.payment.created_at</code>.
     */
    public PaymentRecord setCreatedAt(Timestamp value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>st.payment.created_at</code>.
     */
    public Timestamp getCreatedAt() {
        return (Timestamp) get(9);
    }

    /**
     * Setter for <code>st.payment.updated_at</code>.
     */
    public PaymentRecord setUpdatedAt(Timestamp value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>st.payment.updated_at</code>.
     */
    public Timestamp getUpdatedAt() {
        return (Timestamp) get(10);
    }

    /**
     * Setter for <code>st.payment.operator_id</code>. 操作人
     */
    public PaymentRecord setOperatorId(Integer value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>st.payment.operator_id</code>. 操作人
     */
    public Integer getOperatorId() {
        return (Integer) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<Integer, String, Integer, Byte, Integer, Timestamp, Byte, String, Timestamp, Timestamp, Timestamp, Integer> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<Integer, String, Integer, Byte, Integer, Timestamp, Byte, String, Timestamp, Timestamp, Timestamp, Integer> valuesRow() {
        return (Row12) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Payment.PAYMENT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Payment.PAYMENT.NO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Payment.PAYMENT.ORDER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field4() {
        return Payment.PAYMENT.METHOD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Payment.PAYMENT.PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return Payment.PAYMENT.EXPIRE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field7() {
        return Payment.PAYMENT.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Payment.PAYMENT.TRADE_NO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field9() {
        return Payment.PAYMENT.PAID_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field10() {
        return Payment.PAYMENT.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field11() {
        return Payment.PAYMENT.UPDATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field12() {
        return Payment.PAYMENT.OPERATOR_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getNo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getOrderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component4() {
        return getMethod();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component6() {
        return getExpireTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component7() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getTradeNo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component9() {
        return getPaidAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component10() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component11() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component12() {
        return getOperatorId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getNo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getOrderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value4() {
        return getMethod();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getExpireTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value7() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getTradeNo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value9() {
        return getPaidAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value10() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value11() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value12() {
        return getOperatorId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentRecord value2(String value) {
        setNo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentRecord value3(Integer value) {
        setOrderId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentRecord value4(Byte value) {
        setMethod(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentRecord value5(Integer value) {
        setPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentRecord value6(Timestamp value) {
        setExpireTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentRecord value7(Byte value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentRecord value8(String value) {
        setTradeNo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentRecord value9(Timestamp value) {
        setPaidAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentRecord value10(Timestamp value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentRecord value11(Timestamp value) {
        setUpdatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentRecord value12(Integer value) {
        setOperatorId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentRecord values(Integer value1, String value2, Integer value3, Byte value4, Integer value5, Timestamp value6, Byte value7, String value8, Timestamp value9, Timestamp value10, Timestamp value11, Integer value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PaymentRecord
     */
    public PaymentRecord() {
        super(Payment.PAYMENT);
    }

    /**
     * Create a detached, initialised PaymentRecord
     */
    public PaymentRecord(Integer id, String no, Integer orderId, Byte method, Integer price, Timestamp expireTime, Byte status, String tradeNo, Timestamp paidAt, Timestamp createdAt, Timestamp updatedAt, Integer operatorId) {
        super(Payment.PAYMENT);

        set(0, id);
        set(1, no);
        set(2, orderId);
        set(3, method);
        set(4, price);
        set(5, expireTime);
        set(6, status);
        set(7, tradeNo);
        set(8, paidAt);
        set(9, createdAt);
        set(10, updatedAt);
        set(11, operatorId);
    }
}
