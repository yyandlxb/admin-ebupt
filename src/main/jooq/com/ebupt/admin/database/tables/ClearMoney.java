/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.ClearMoneyRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClearMoney extends TableImpl<ClearMoneyRecord> {

    private static final long serialVersionUID = -1558537011;

    /**
     * The reference instance of <code>st.clear_money</code>
     */
    public static final ClearMoney CLEAR_MONEY = new ClearMoney();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClearMoneyRecord> getRecordType() {
        return ClearMoneyRecord.class;
    }

    /**
     * The column <code>st.clear_money.id</code>.
     */
    public final TableField<ClearMoneyRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>st.clear_money.bcr_id</code>. 财务统计表ID
     */
    public final TableField<ClearMoneyRecord, Integer> BCR_ID = createField("bcr_id", org.jooq.impl.SQLDataType.INTEGER, this, "财务统计表ID");

    /**
     * The column <code>st.clear_money.type</code>. 1:运费,2:垫付款3:代收款
     */
    public final TableField<ClearMoneyRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(2), this, "1:运费,2:垫付款3:代收款");

    /**
     * The column <code>st.clear_money.clear_time</code>. 清分的时间
     */
    public final TableField<ClearMoneyRecord, Timestamp> CLEAR_TIME = createField("clear_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "清分的时间");

    /**
     * The column <code>st.clear_money.user_id</code>. 清分的人Id
     */
    public final TableField<ClearMoneyRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "清分的人Id");

    /**
     * The column <code>st.clear_money.clear_code</code>. 清分单号
     */
    public final TableField<ClearMoneyRecord, String> CLEAR_CODE = createField("clear_code", org.jooq.impl.SQLDataType.VARCHAR(255), this, "清分单号");

    /**
     * The column <code>st.clear_money.bankCard_id</code>. 银行卡ID
     */
    public final TableField<ClearMoneyRecord, Integer> BANKCARD_ID = createField("bankCard_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "银行卡ID");

    /**
     * The column <code>st.clear_money.clear_money</code>. 清分的钱数
     */
    public final TableField<ClearMoneyRecord, BigDecimal> CLEAR_MONEY_ = createField("clear_money", org.jooq.impl.SQLDataType.DECIMAL(20, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "清分的钱数");

    /**
     * The column <code>st.clear_money.line_code</code>. 线路Code
     */
    public final TableField<ClearMoneyRecord, String> LINE_CODE = createField("line_code", org.jooq.impl.SQLDataType.VARCHAR(20), this, "线路Code");

    /**
     * The column <code>st.clear_money.business_id</code>. 商户ID
     */
    public final TableField<ClearMoneyRecord, Integer> BUSINESS_ID = createField("business_id", org.jooq.impl.SQLDataType.INTEGER, this, "商户ID");

    /**
     * The column <code>st.clear_money.send_time</code>. 报表时间
     */
    public final TableField<ClearMoneyRecord, String> SEND_TIME = createField("send_time", org.jooq.impl.SQLDataType.VARCHAR(20), this, "报表时间");

    /**
     * Create a <code>st.clear_money</code> table reference
     */
    public ClearMoney() {
        this(DSL.name("clear_money"), null);
    }

    /**
     * Create an aliased <code>st.clear_money</code> table reference
     */
    public ClearMoney(String alias) {
        this(DSL.name(alias), CLEAR_MONEY);
    }

    /**
     * Create an aliased <code>st.clear_money</code> table reference
     */
    public ClearMoney(Name alias) {
        this(alias, CLEAR_MONEY);
    }

    private ClearMoney(Name alias, Table<ClearMoneyRecord> aliased) {
        this(alias, aliased, null);
    }

    private ClearMoney(Name alias, Table<ClearMoneyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CLEAR_MONEY_CLEAR_IDX, Indexes.CLEAR_MONEY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ClearMoneyRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CLEAR_MONEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ClearMoneyRecord> getPrimaryKey() {
        return Keys.KEY_CLEAR_MONEY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ClearMoneyRecord>> getKeys() {
        return Arrays.<UniqueKey<ClearMoneyRecord>>asList(Keys.KEY_CLEAR_MONEY_PRIMARY, Keys.KEY_CLEAR_MONEY_CLEAR_IDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClearMoney as(String alias) {
        return new ClearMoney(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClearMoney as(Name alias) {
        return new ClearMoney(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ClearMoney rename(String name) {
        return new ClearMoney(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ClearMoney rename(Name name) {
        return new ClearMoney(name, null);
    }
}
