/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.ReceiverCompletionRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 收货人自动补全
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReceiverCompletion extends TableImpl<ReceiverCompletionRecord> {

    private static final long serialVersionUID = 1040943431;

    /**
     * The reference instance of <code>st.receiver_completion</code>
     */
    public static final ReceiverCompletion RECEIVER_COMPLETION = new ReceiverCompletion();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReceiverCompletionRecord> getRecordType() {
        return ReceiverCompletionRecord.class;
    }

    /**
     * The column <code>st.receiver_completion.id</code>.
     */
    public final TableField<ReceiverCompletionRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>st.receiver_completion.merchant_id</code>.
     */
    public final TableField<ReceiverCompletionRecord, Integer> MERCHANT_ID = createField("merchant_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>st.receiver_completion.id_card_number</code>.
     */
    public final TableField<ReceiverCompletionRecord, String> ID_CARD_NUMBER = createField("id_card_number", org.jooq.impl.SQLDataType.VARCHAR(18).nullable(false), this, "");

    /**
     * The column <code>st.receiver_completion.phone_number</code>.
     */
    public final TableField<ReceiverCompletionRecord, String> PHONE_NUMBER = createField("phone_number", org.jooq.impl.SQLDataType.VARCHAR(15).nullable(false), this, "");

    /**
     * The column <code>st.receiver_completion.name</code>.
     */
    public final TableField<ReceiverCompletionRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>st.receiver_completion.created_at</code>.
     */
    public final TableField<ReceiverCompletionRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>st.receiver_completion</code> table reference
     */
    public ReceiverCompletion() {
        this(DSL.name("receiver_completion"), null);
    }

    /**
     * Create an aliased <code>st.receiver_completion</code> table reference
     */
    public ReceiverCompletion(String alias) {
        this(DSL.name(alias), RECEIVER_COMPLETION);
    }

    /**
     * Create an aliased <code>st.receiver_completion</code> table reference
     */
    public ReceiverCompletion(Name alias) {
        this(alias, RECEIVER_COMPLETION);
    }

    private ReceiverCompletion(Name alias, Table<ReceiverCompletionRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReceiverCompletion(Name alias, Table<ReceiverCompletionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "收货人自动补全");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RECEIVER_COMPLETION_PRIMARY, Indexes.RECEIVER_COMPLETION_UK_RECEIVER_COMPLETION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ReceiverCompletionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_RECEIVER_COMPLETION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ReceiverCompletionRecord> getPrimaryKey() {
        return Keys.KEY_RECEIVER_COMPLETION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ReceiverCompletionRecord>> getKeys() {
        return Arrays.<UniqueKey<ReceiverCompletionRecord>>asList(Keys.KEY_RECEIVER_COMPLETION_PRIMARY, Keys.KEY_RECEIVER_COMPLETION_UK_RECEIVER_COMPLETION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReceiverCompletion as(String alias) {
        return new ReceiverCompletion(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReceiverCompletion as(Name alias) {
        return new ReceiverCompletion(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReceiverCompletion rename(String name) {
        return new ReceiverCompletion(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReceiverCompletion rename(Name name) {
        return new ReceiverCompletion(name, null);
    }
}
