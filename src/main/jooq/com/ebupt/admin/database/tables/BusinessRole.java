/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.BusinessRoleRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BusinessRole extends TableImpl<BusinessRoleRecord> {

    private static final long serialVersionUID = -1374085713;

    /**
     * The reference instance of <code>st.business_role</code>
     */
    public static final BusinessRole BUSINESS_ROLE = new BusinessRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BusinessRoleRecord> getRecordType() {
        return BusinessRoleRecord.class;
    }

    /**
     * The column <code>st.business_role.id</code>.
     */
    public final TableField<BusinessRoleRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>st.business_role.business_id</code>. 商户ID
     */
    public final TableField<BusinessRoleRecord, Integer> BUSINESS_ID = createField("business_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "商户ID");

    /**
     * The column <code>st.business_role.name</code>. 角色名
     */
    public final TableField<BusinessRoleRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "角色名");

    /**
     * The column <code>st.business_role.created_at</code>.
     */
    public final TableField<BusinessRoleRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.business_role.updated_at</code>.
     */
    public final TableField<BusinessRoleRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>st.business_role</code> table reference
     */
    public BusinessRole() {
        this(DSL.name("business_role"), null);
    }

    /**
     * Create an aliased <code>st.business_role</code> table reference
     */
    public BusinessRole(String alias) {
        this(DSL.name(alias), BUSINESS_ROLE);
    }

    /**
     * Create an aliased <code>st.business_role</code> table reference
     */
    public BusinessRole(Name alias) {
        this(alias, BUSINESS_ROLE);
    }

    private BusinessRole(Name alias, Table<BusinessRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private BusinessRole(Name alias, Table<BusinessRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BUSINESS_ROLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BusinessRoleRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BUSINESS_ROLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BusinessRoleRecord> getPrimaryKey() {
        return Keys.KEY_BUSINESS_ROLE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BusinessRoleRecord>> getKeys() {
        return Arrays.<UniqueKey<BusinessRoleRecord>>asList(Keys.KEY_BUSINESS_ROLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BusinessRole as(String alias) {
        return new BusinessRole(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BusinessRole as(Name alias) {
        return new BusinessRole(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BusinessRole rename(String name) {
        return new BusinessRole(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BusinessRole rename(Name name) {
        return new BusinessRole(name, null);
    }
}
