/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.UserIdCardRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserIdCard extends TableImpl<UserIdCardRecord> {

    private static final long serialVersionUID = -1882075439;

    /**
     * The reference instance of <code>st.user_id_card</code>
     */
    public static final UserIdCard USER_ID_CARD = new UserIdCard();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserIdCardRecord> getRecordType() {
        return UserIdCardRecord.class;
    }

    /**
     * The column <code>st.user_id_card.id</code>. 主键
     */
    public final TableField<UserIdCardRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>st.user_id_card.name</code>. 姓名
     */
    public final TableField<UserIdCardRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "姓名");

    /**
     * The column <code>st.user_id_card.id_card_num</code>. 身份证号
     */
    public final TableField<UserIdCardRecord, String> ID_CARD_NUM = createField("id_card_num", org.jooq.impl.SQLDataType.VARCHAR(50), this, "身份证号");

    /**
     * The column <code>st.user_id_card.phone</code>. 电话
     */
    public final TableField<UserIdCardRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR(255), this, "电话");

    /**
     * The column <code>st.user_id_card.create_time</code>. 创建时间
     */
    public final TableField<UserIdCardRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>st.user_id_card.role</code>. 1 发货人 2收货人 3提货人
     */
    public final TableField<UserIdCardRecord, String> ROLE = createField("role", org.jooq.impl.SQLDataType.VARCHAR(2), this, "1 发货人 2收货人 3提货人");

    /**
     * The column <code>st.user_id_card.id_card_address</code>. 收货人身份证地址
     */
    public final TableField<UserIdCardRecord, String> ID_CARD_ADDRESS = createField("id_card_address", org.jooq.impl.SQLDataType.VARCHAR(255), this, "收货人身份证地址");

    /**
     * Create a <code>st.user_id_card</code> table reference
     */
    public UserIdCard() {
        this(DSL.name("user_id_card"), null);
    }

    /**
     * Create an aliased <code>st.user_id_card</code> table reference
     */
    public UserIdCard(String alias) {
        this(DSL.name(alias), USER_ID_CARD);
    }

    /**
     * Create an aliased <code>st.user_id_card</code> table reference
     */
    public UserIdCard(Name alias) {
        this(alias, USER_ID_CARD);
    }

    private UserIdCard(Name alias, Table<UserIdCardRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserIdCard(Name alias, Table<UserIdCardRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_ID_CARD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserIdCardRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_ID_CARD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserIdCardRecord> getPrimaryKey() {
        return Keys.KEY_USER_ID_CARD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserIdCardRecord>> getKeys() {
        return Arrays.<UniqueKey<UserIdCardRecord>>asList(Keys.KEY_USER_ID_CARD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserIdCard as(String alias) {
        return new UserIdCard(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserIdCard as(Name alias) {
        return new UserIdCard(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserIdCard rename(String name) {
        return new UserIdCard(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserIdCard rename(Name name) {
        return new UserIdCard(name, null);
    }
}
