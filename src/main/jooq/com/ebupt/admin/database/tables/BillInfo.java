/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.BillInfoRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BillInfo extends TableImpl<BillInfoRecord> {

    private static final long serialVersionUID = 1116744328;

    /**
     * The reference instance of <code>st.bill_info</code>
     */
    public static final BillInfo BILL_INFO = new BillInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BillInfoRecord> getRecordType() {
        return BillInfoRecord.class;
    }

    /**
     * The column <code>st.bill_info.id</code>.
     */
    public final TableField<BillInfoRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>st.bill_info.business_id</code>. 商家ID
     */
    public final TableField<BillInfoRecord, Integer> BUSINESS_ID = createField("business_id", org.jooq.impl.SQLDataType.INTEGER, this, "商家ID");

    /**
     * The column <code>st.bill_info.bill_name</code>. 凭单名称
     */
    public final TableField<BillInfoRecord, String> BILL_NAME = createField("bill_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "凭单名称");

    /**
     * The column <code>st.bill_info.business_name</code>. 物流公司名称
     */
    public final TableField<BillInfoRecord, String> BUSINESS_NAME = createField("business_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "物流公司名称");

    /**
     * The column <code>st.bill_info.receive_address</code>. 收货地址，可以有多个。 用 “-” 隔开,如：北京市-石家庄市
     */
    public final TableField<BillInfoRecord, String> RECEIVE_ADDRESS = createField("receive_address", org.jooq.impl.SQLDataType.VARCHAR(255), this, "收货地址，可以有多个。 用 “-” 隔开,如：北京市-石家庄市");

    /**
     * The column <code>st.bill_info.business_phone</code>. 物流公司联系方式
     */
    public final TableField<BillInfoRecord, String> BUSINESS_PHONE = createField("business_phone", org.jooq.impl.SQLDataType.VARCHAR(255), this, "物流公司联系方式");

    /**
     * The column <code>st.bill_info.receive_phone</code>. 收货电话，可以有多个。与收货地址对应 用 “-” 隔开,如：186,189-188
     */
    public final TableField<BillInfoRecord, String> RECEIVE_PHONE = createField("receive_phone", org.jooq.impl.SQLDataType.VARCHAR(255), this, "收货电话，可以有多个。与收货地址对应 用 “-” 隔开,如：186,189-188");

    /**
     * The column <code>st.bill_info.unloade_address</code>. 卸货地址
     */
    public final TableField<BillInfoRecord, String> UNLOADE_ADDRESS = createField("unloade_address", org.jooq.impl.SQLDataType.VARCHAR(255), this, "卸货地址");

    /**
     * The column <code>st.bill_info.unloade_phone</code>. 卸货电话
     */
    public final TableField<BillInfoRecord, String> UNLOADE_PHONE = createField("unloade_phone", org.jooq.impl.SQLDataType.VARCHAR(255), this, "卸货电话");

    /**
     * The column <code>st.bill_info.disclaimer</code>. 免责声明
     */
    public final TableField<BillInfoRecord, String> DISCLAIMER = createField("disclaimer", org.jooq.impl.SQLDataType.VARCHAR(5000), this, "免责声明");

    /**
     * The column <code>st.bill_info.clause</code>. 货运条款
     */
    public final TableField<BillInfoRecord, String> CLAUSE = createField("clause", org.jooq.impl.SQLDataType.VARCHAR(5000), this, "货运条款");

    /**
     * The column <code>st.bill_info.createTime</code>. 创建时间
     */
    public final TableField<BillInfoRecord, String> CREATETIME = createField("createTime", org.jooq.impl.SQLDataType.VARCHAR(255), this, "创建时间");

    /**
     * The column <code>st.bill_info.updateTime</code>. 修改时间
     */
    public final TableField<BillInfoRecord, String> UPDATETIME = createField("updateTime", org.jooq.impl.SQLDataType.VARCHAR(255), this, "修改时间");

    /**
     * The column <code>st.bill_info.created_at</code>.
     */
    public final TableField<BillInfoRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.bill_info.updated_at</code>.
     */
    public final TableField<BillInfoRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>st.bill_info</code> table reference
     */
    public BillInfo() {
        this(DSL.name("bill_info"), null);
    }

    /**
     * Create an aliased <code>st.bill_info</code> table reference
     */
    public BillInfo(String alias) {
        this(DSL.name(alias), BILL_INFO);
    }

    /**
     * Create an aliased <code>st.bill_info</code> table reference
     */
    public BillInfo(Name alias) {
        this(alias, BILL_INFO);
    }

    private BillInfo(Name alias, Table<BillInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private BillInfo(Name alias, Table<BillInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BILL_INFO_PRIMARY, Indexes.BILL_INFO_UK_BUSINESS_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BillInfoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BILL_INFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BillInfoRecord> getPrimaryKey() {
        return Keys.KEY_BILL_INFO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BillInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<BillInfoRecord>>asList(Keys.KEY_BILL_INFO_PRIMARY, Keys.KEY_BILL_INFO_UK_BUSINESS_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BillInfo as(String alias) {
        return new BillInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BillInfo as(Name alias) {
        return new BillInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BillInfo rename(String name) {
        return new BillInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BillInfo rename(Name name) {
        return new BillInfo(name, null);
    }
}
