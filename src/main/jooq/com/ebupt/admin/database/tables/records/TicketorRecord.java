/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables.records;


import com.ebupt.admin.database.tables.Ticketor;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TicketorRecord extends UpdatableRecordImpl<TicketorRecord> implements Record7<Integer, String, String, String, String, Timestamp, String> {

    private static final long serialVersionUID = 1012711650;

    /**
     * Setter for <code>st.ticketor.id</code>.
     */
    public TicketorRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>st.ticketor.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>st.ticketor.user_name</code>. 出票员姓名
     */
    public TicketorRecord setUserName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>st.ticketor.user_name</code>. 出票员姓名
     */
    public String getUserName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>st.ticketor.ticket_phone</code>. 出票员手机号
     */
    public TicketorRecord setTicketPhone(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>st.ticketor.ticket_phone</code>. 出票员手机号
     */
    public String getTicketPhone() {
        return (String) get(2);
    }

    /**
     * Setter for <code>st.ticketor.password</code>.
     */
    public TicketorRecord setPassword(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>st.ticketor.password</code>.
     */
    public String getPassword() {
        return (String) get(3);
    }

    /**
     * Setter for <code>st.ticketor.route_address</code>.
     */
    public TicketorRecord setRouteAddress(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>st.ticketor.route_address</code>.
     */
    public String getRouteAddress() {
        return (String) get(4);
    }

    /**
     * Setter for <code>st.ticketor.create_time</code>. ´´½¨Ê±¼ä
     */
    public TicketorRecord setCreateTime(Timestamp value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>st.ticketor.create_time</code>. ´´½¨Ê±¼ä
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>st.ticketor.flag</code>. 0：有效，1：无效
     */
    public TicketorRecord setFlag(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>st.ticketor.flag</code>. 0：有效，1：无效
     */
    public String getFlag() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, String, String, Timestamp, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, String, String, Timestamp, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Ticketor.TICKETOR.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Ticketor.TICKETOR.USER_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Ticketor.TICKETOR.TICKET_PHONE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Ticketor.TICKETOR.PASSWORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Ticketor.TICKETOR.ROUTE_ADDRESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return Ticketor.TICKETOR.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Ticketor.TICKETOR.FLAG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getUserName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getTicketPhone();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getRouteAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component6() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getUserName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getTicketPhone();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getRouteAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketorRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketorRecord value2(String value) {
        setUserName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketorRecord value3(String value) {
        setTicketPhone(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketorRecord value4(String value) {
        setPassword(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketorRecord value5(String value) {
        setRouteAddress(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketorRecord value6(Timestamp value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketorRecord value7(String value) {
        setFlag(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TicketorRecord values(Integer value1, String value2, String value3, String value4, String value5, Timestamp value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TicketorRecord
     */
    public TicketorRecord() {
        super(Ticketor.TICKETOR);
    }

    /**
     * Create a detached, initialised TicketorRecord
     */
    public TicketorRecord(Integer id, String userName, String ticketPhone, String password, String routeAddress, Timestamp createTime, String flag) {
        super(Ticketor.TICKETOR);

        set(0, id);
        set(1, userName);
        set(2, ticketPhone);
        set(3, password);
        set(4, routeAddress);
        set(5, createTime);
        set(6, flag);
    }
}
