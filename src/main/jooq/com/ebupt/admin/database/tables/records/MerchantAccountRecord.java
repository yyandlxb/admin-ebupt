/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables.records;


import com.ebupt.admin.database.tables.MerchantAccount;

import java.sql.Date;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 商户运费贷账户
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MerchantAccountRecord extends UpdatableRecordImpl<MerchantAccountRecord> implements Record10<Integer, Integer, Integer, Integer, String, Boolean, Date, Timestamp, Timestamp, Timestamp> {

    private static final long serialVersionUID = -816877493;

    /**
     * Setter for <code>st.merchant_account.id</code>.
     */
    public MerchantAccountRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>st.merchant_account.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>st.merchant_account.balance</code>. 账户余额
     */
    public MerchantAccountRecord setBalance(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>st.merchant_account.balance</code>. 账户余额
     */
    public Integer getBalance() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>st.merchant_account.overdue_debt</code>. 逾期欠款
     */
    public MerchantAccountRecord setOverdueDebt(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>st.merchant_account.overdue_debt</code>. 逾期欠款
     */
    public Integer getOverdueDebt() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>st.merchant_account.interest</code>. 利息
     */
    public MerchantAccountRecord setInterest(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>st.merchant_account.interest</code>. 利息
     */
    public Integer getInterest() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>st.merchant_account.contract</code>. 合同地址
     */
    public MerchantAccountRecord setContract(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>st.merchant_account.contract</code>. 合同地址
     */
    public String getContract() {
        return (String) get(4);
    }

    /**
     * Setter for <code>st.merchant_account.enabled</code>.
     */
    public MerchantAccountRecord setEnabled(Boolean value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>st.merchant_account.enabled</code>.
     */
    public Boolean getEnabled() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>st.merchant_account.due_date</code>. 本期还款日
     */
    public MerchantAccountRecord setDueDate(Date value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>st.merchant_account.due_date</code>. 本期还款日
     */
    public Date getDueDate() {
        return (Date) get(6);
    }

    /**
     * Setter for <code>st.merchant_account.last_interest_time</code>. 上次核算利息时间
     */
    public MerchantAccountRecord setLastInterestTime(Timestamp value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>st.merchant_account.last_interest_time</code>. 上次核算利息时间
     */
    public Timestamp getLastInterestTime() {
        return (Timestamp) get(7);
    }

    /**
     * Setter for <code>st.merchant_account.created_at</code>.
     */
    public MerchantAccountRecord setCreatedAt(Timestamp value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>st.merchant_account.created_at</code>.
     */
    public Timestamp getCreatedAt() {
        return (Timestamp) get(8);
    }

    /**
     * Setter for <code>st.merchant_account.updated_at</code>.
     */
    public MerchantAccountRecord setUpdatedAt(Timestamp value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>st.merchant_account.updated_at</code>.
     */
    public Timestamp getUpdatedAt() {
        return (Timestamp) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, Integer, Integer, Integer, String, Boolean, Date, Timestamp, Timestamp, Timestamp> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, Integer, Integer, Integer, String, Boolean, Date, Timestamp, Timestamp, Timestamp> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return MerchantAccount.MERCHANT_ACCOUNT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return MerchantAccount.MERCHANT_ACCOUNT.BALANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return MerchantAccount.MERCHANT_ACCOUNT.OVERDUE_DEBT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return MerchantAccount.MERCHANT_ACCOUNT.INTEREST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return MerchantAccount.MERCHANT_ACCOUNT.CONTRACT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field6() {
        return MerchantAccount.MERCHANT_ACCOUNT.ENABLED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field7() {
        return MerchantAccount.MERCHANT_ACCOUNT.DUE_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field8() {
        return MerchantAccount.MERCHANT_ACCOUNT.LAST_INTEREST_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field9() {
        return MerchantAccount.MERCHANT_ACCOUNT.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field10() {
        return MerchantAccount.MERCHANT_ACCOUNT.UPDATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getBalance();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getOverdueDebt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getInterest();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getContract();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component6() {
        return getEnabled();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component7() {
        return getDueDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component8() {
        return getLastInterestTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component9() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component10() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getBalance();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getOverdueDebt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getInterest();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getContract();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value6() {
        return getEnabled();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value7() {
        return getDueDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value8() {
        return getLastInterestTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value9() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value10() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MerchantAccountRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MerchantAccountRecord value2(Integer value) {
        setBalance(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MerchantAccountRecord value3(Integer value) {
        setOverdueDebt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MerchantAccountRecord value4(Integer value) {
        setInterest(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MerchantAccountRecord value5(String value) {
        setContract(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MerchantAccountRecord value6(Boolean value) {
        setEnabled(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MerchantAccountRecord value7(Date value) {
        setDueDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MerchantAccountRecord value8(Timestamp value) {
        setLastInterestTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MerchantAccountRecord value9(Timestamp value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MerchantAccountRecord value10(Timestamp value) {
        setUpdatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MerchantAccountRecord values(Integer value1, Integer value2, Integer value3, Integer value4, String value5, Boolean value6, Date value7, Timestamp value8, Timestamp value9, Timestamp value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MerchantAccountRecord
     */
    public MerchantAccountRecord() {
        super(MerchantAccount.MERCHANT_ACCOUNT);
    }

    /**
     * Create a detached, initialised MerchantAccountRecord
     */
    public MerchantAccountRecord(Integer id, Integer balance, Integer overdueDebt, Integer interest, String contract, Boolean enabled, Date dueDate, Timestamp lastInterestTime, Timestamp createdAt, Timestamp updatedAt) {
        super(MerchantAccount.MERCHANT_ACCOUNT);

        set(0, id);
        set(1, balance);
        set(2, overdueDebt);
        set(3, interest);
        set(4, contract);
        set(5, enabled);
        set(6, dueDate);
        set(7, lastInterestTime);
        set(8, createdAt);
        set(9, updatedAt);
    }
}
