/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.PoliceUserRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PoliceUser extends TableImpl<PoliceUserRecord> {

    private static final long serialVersionUID = 1521193999;

    /**
     * The reference instance of <code>st.police_user</code>
     */
    public static final PoliceUser POLICE_USER = new PoliceUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PoliceUserRecord> getRecordType() {
        return PoliceUserRecord.class;
    }

    /**
     * The column <code>st.police_user.id</code>.
     */
    public final TableField<PoliceUserRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>st.police_user.user_name</code>. 用户名
     */
    public final TableField<PoliceUserRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "用户名");

    /**
     * The column <code>st.police_user.user_phone</code>. 用户手机号
     */
    public final TableField<PoliceUserRecord, String> USER_PHONE = createField("user_phone", org.jooq.impl.SQLDataType.VARCHAR(255), this, "用户手机号");

    /**
     * The column <code>st.police_user.password</code>.
     */
    public final TableField<PoliceUserRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>st.police_user.create_time</code>.
     */
    public final TableField<PoliceUserRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>st.police_user.route_code</code>. 线路code字符串
     */
    public final TableField<PoliceUserRecord, String> ROUTE_CODE = createField("route_code", org.jooq.impl.SQLDataType.VARCHAR(255), this, "线路code字符串");

    /**
     * The column <code>st.police_user.is_delete</code>. 0,启动，1，删除
     */
    public final TableField<PoliceUserRecord, String> IS_DELETE = createField("is_delete", org.jooq.impl.SQLDataType.VARCHAR(2).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "0,启动，1，删除");

    /**
     * The column <code>st.police_user.created_at</code>.
     */
    public final TableField<PoliceUserRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.police_user.updated_at</code>.
     */
    public final TableField<PoliceUserRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>st.police_user</code> table reference
     */
    public PoliceUser() {
        this(DSL.name("police_user"), null);
    }

    /**
     * Create an aliased <code>st.police_user</code> table reference
     */
    public PoliceUser(String alias) {
        this(DSL.name(alias), POLICE_USER);
    }

    /**
     * Create an aliased <code>st.police_user</code> table reference
     */
    public PoliceUser(Name alias) {
        this(alias, POLICE_USER);
    }

    private PoliceUser(Name alias, Table<PoliceUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private PoliceUser(Name alias, Table<PoliceUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.POLICE_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PoliceUserRecord, Integer> getIdentity() {
        return Keys.IDENTITY_POLICE_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PoliceUserRecord> getPrimaryKey() {
        return Keys.KEY_POLICE_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PoliceUserRecord>> getKeys() {
        return Arrays.<UniqueKey<PoliceUserRecord>>asList(Keys.KEY_POLICE_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PoliceUser as(String alias) {
        return new PoliceUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PoliceUser as(Name alias) {
        return new PoliceUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PoliceUser rename(String name) {
        return new PoliceUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PoliceUser rename(Name name) {
        return new PoliceUser(name, null);
    }
}
