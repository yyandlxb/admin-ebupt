/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.PackPaymentRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PackPayment extends TableImpl<PackPaymentRecord> {

    private static final long serialVersionUID = -1265721346;

    /**
     * The reference instance of <code>st.pack_payment</code>
     */
    public static final PackPayment PACK_PAYMENT = new PackPayment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PackPaymentRecord> getRecordType() {
        return PackPaymentRecord.class;
    }

    /**
     * The column <code>st.pack_payment.id</code>.
     */
    public final TableField<PackPaymentRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>st.pack_payment.pack_id</code>.
     */
    public final TableField<PackPaymentRecord, Integer> PACK_ID = createField("pack_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>st.pack_payment.status</code>.
     */
    public final TableField<PackPaymentRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>st.pack_payment.pack_code</code>.
     */
    public final TableField<PackPaymentRecord, String> PACK_CODE = createField("pack_code", org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>st.pack_payment.driver_id</code>.
     */
    public final TableField<PackPaymentRecord, Integer> DRIVER_ID = createField("driver_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>st.pack_payment.driver_name</code>.
     */
    public final TableField<PackPaymentRecord, String> DRIVER_NAME = createField("driver_name", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>st.pack_payment.driver_phone</code>.
     */
    public final TableField<PackPaymentRecord, String> DRIVER_PHONE = createField("driver_phone", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>st.pack_payment.driver_id_card</code>.
     */
    public final TableField<PackPaymentRecord, String> DRIVER_ID_CARD = createField("driver_id_card", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>st.pack_payment.plate_number</code>.
     */
    public final TableField<PackPaymentRecord, String> PLATE_NUMBER = createField("plate_number", org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>st.pack_payment.bank_account_name</code>.
     */
    public final TableField<PackPaymentRecord, String> BANK_ACCOUNT_NAME = createField("bank_account_name", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>st.pack_payment.bank_account_number</code>.
     */
    public final TableField<PackPaymentRecord, String> BANK_ACCOUNT_NUMBER = createField("bank_account_number", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>st.pack_payment.opening_bank</code>.
     */
    public final TableField<PackPaymentRecord, String> OPENING_BANK = createField("opening_bank", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>st.pack_payment.total_price</code>. 总运费，单位为分
     */
    public final TableField<PackPaymentRecord, Integer> TOTAL_PRICE = createField("total_price", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "总运费，单位为分");

    /**
     * The column <code>st.pack_payment.deposit</code>. 定金（现付部分），单位为分
     */
    public final TableField<PackPaymentRecord, Integer> DEPOSIT = createField("deposit", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "定金（现付部分），单位为分");

    /**
     * The column <code>st.pack_payment.balance_due</code>. 尾款（到付部分），单位为分
     */
    public final TableField<PackPaymentRecord, Integer> BALANCE_DUE = createField("balance_due", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "尾款（到付部分），单位为分");

    /**
     * The column <code>st.pack_payment.pay_price</code>. 实际支付金额，单位为分
     */
    public final TableField<PackPaymentRecord, Integer> PAY_PRICE = createField("pay_price", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "实际支付金额，单位为分");

    /**
     * The column <code>st.pack_payment.sender_name</code>.
     */
    public final TableField<PackPaymentRecord, String> SENDER_NAME = createField("sender_name", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>st.pack_payment.sender_phone</code>.
     */
    public final TableField<PackPaymentRecord, String> SENDER_PHONE = createField("sender_phone", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>st.pack_payment.sent_at</code>.
     */
    public final TableField<PackPaymentRecord, Timestamp> SENT_AT = createField("sent_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>st.pack_payment.receiver_name</code>.
     */
    public final TableField<PackPaymentRecord, String> RECEIVER_NAME = createField("receiver_name", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>st.pack_payment.receiver_phone</code>.
     */
    public final TableField<PackPaymentRecord, String> RECEIVER_PHONE = createField("receiver_phone", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>st.pack_payment.received_at</code>.
     */
    public final TableField<PackPaymentRecord, Timestamp> RECEIVED_AT = createField("received_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>st.pack_payment.paid_at</code>.
     */
    public final TableField<PackPaymentRecord, Timestamp> PAID_AT = createField("paid_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>st.pack_payment.sync_at</code>. 成功同步干线时间
     */
    public final TableField<PackPaymentRecord, Timestamp> SYNC_AT = createField("sync_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "成功同步干线时间");

    /**
     * The column <code>st.pack_payment.created_at</code>.
     */
    public final TableField<PackPaymentRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.pack_payment.updated_at</code>.
     */
    public final TableField<PackPaymentRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.pack_payment.bank_name</code>. 银行名称
     */
    public final TableField<PackPaymentRecord, String> BANK_NAME = createField("bank_name", org.jooq.impl.SQLDataType.VARCHAR(20), this, "银行名称");

    /**
     * The column <code>st.pack_payment.bank_code</code>. 银行代码
     */
    public final TableField<PackPaymentRecord, String> BANK_CODE = createField("bank_code", org.jooq.impl.SQLDataType.VARCHAR(15), this, "银行代码");

    /**
     * The column <code>st.pack_payment.bank_province</code>. 省份
     */
    public final TableField<PackPaymentRecord, String> BANK_PROVINCE = createField("bank_province", org.jooq.impl.SQLDataType.VARCHAR(20), this, "省份");

    /**
     * The column <code>st.pack_payment.bank_province_code</code>. 省份代码
     */
    public final TableField<PackPaymentRecord, String> BANK_PROVINCE_CODE = createField("bank_province_code", org.jooq.impl.SQLDataType.VARCHAR(15), this, "省份代码");

    /**
     * The column <code>st.pack_payment.bank_branch_code</code>. 开户行代码
     */
    public final TableField<PackPaymentRecord, String> BANK_BRANCH_CODE = createField("bank_branch_code", org.jooq.impl.SQLDataType.VARCHAR(15), this, "开户行代码");

    /**
     * The column <code>st.pack_payment.old</code>. 1-老数据，0-新数据
     */
    public final TableField<PackPaymentRecord, Boolean> OLD = createField("old", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'1'", org.jooq.impl.SQLDataType.BIT)), this, "1-老数据，0-新数据");

    /**
     * Create a <code>st.pack_payment</code> table reference
     */
    public PackPayment() {
        this(DSL.name("pack_payment"), null);
    }

    /**
     * Create an aliased <code>st.pack_payment</code> table reference
     */
    public PackPayment(String alias) {
        this(DSL.name(alias), PACK_PAYMENT);
    }

    /**
     * Create an aliased <code>st.pack_payment</code> table reference
     */
    public PackPayment(Name alias) {
        this(alias, PACK_PAYMENT);
    }

    private PackPayment(Name alias, Table<PackPaymentRecord> aliased) {
        this(alias, aliased, null);
    }

    private PackPayment(Name alias, Table<PackPaymentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PACK_PAYMENT_PRIMARY, Indexes.PACK_PAYMENT_UK_PACK_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PackPaymentRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PACK_PAYMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PackPaymentRecord> getPrimaryKey() {
        return Keys.KEY_PACK_PAYMENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PackPaymentRecord>> getKeys() {
        return Arrays.<UniqueKey<PackPaymentRecord>>asList(Keys.KEY_PACK_PAYMENT_PRIMARY, Keys.KEY_PACK_PAYMENT_UK_PACK_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PackPayment as(String alias) {
        return new PackPayment(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PackPayment as(Name alias) {
        return new PackPayment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PackPayment rename(String name) {
        return new PackPayment(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PackPayment rename(Name name) {
        return new PackPayment(name, null);
    }
}
