/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.BusinessOperationRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BusinessOperation extends TableImpl<BusinessOperationRecord> {

    private static final long serialVersionUID = 1150789450;

    /**
     * The reference instance of <code>st.business_operation</code>
     */
    public static final BusinessOperation BUSINESS_OPERATION = new BusinessOperation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BusinessOperationRecord> getRecordType() {
        return BusinessOperationRecord.class;
    }

    /**
     * The column <code>st.business_operation.id</code>.
     */
    public final TableField<BusinessOperationRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>st.business_operation.user_phone</code>. 修改人手机号
     */
    public final TableField<BusinessOperationRecord, String> USER_PHONE = createField("user_phone", org.jooq.impl.SQLDataType.VARCHAR(20), this, "修改人手机号");

    /**
     * The column <code>st.business_operation.business_id</code>. 商户ID
     */
    public final TableField<BusinessOperationRecord, Integer> BUSINESS_ID = createField("business_id", org.jooq.impl.SQLDataType.INTEGER, this, "商户ID");

    /**
     * The column <code>st.business_operation.info</code>.
     */
    public final TableField<BusinessOperationRecord, String> INFO = createField("info", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>st.business_operation.type_status</code>. 类型状态1,修改信息，2，修改线路
     */
    public final TableField<BusinessOperationRecord, Integer> TYPE_STATUS = createField("type_status", org.jooq.impl.SQLDataType.INTEGER, this, "类型状态1,修改信息，2，修改线路");

    /**
     * The column <code>st.business_operation.operation_status</code>. 操作状态，1，修改，2，删除,3,添加
     */
    public final TableField<BusinessOperationRecord, Integer> OPERATION_STATUS = createField("operation_status", org.jooq.impl.SQLDataType.INTEGER, this, "操作状态，1，修改，2，删除,3,添加");

    /**
     * The column <code>st.business_operation.create_time</code>.
     */
    public final TableField<BusinessOperationRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>st.business_operation</code> table reference
     */
    public BusinessOperation() {
        this(DSL.name("business_operation"), null);
    }

    /**
     * Create an aliased <code>st.business_operation</code> table reference
     */
    public BusinessOperation(String alias) {
        this(DSL.name(alias), BUSINESS_OPERATION);
    }

    /**
     * Create an aliased <code>st.business_operation</code> table reference
     */
    public BusinessOperation(Name alias) {
        this(alias, BUSINESS_OPERATION);
    }

    private BusinessOperation(Name alias, Table<BusinessOperationRecord> aliased) {
        this(alias, aliased, null);
    }

    private BusinessOperation(Name alias, Table<BusinessOperationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BUSINESS_OPERATION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BusinessOperationRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BUSINESS_OPERATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BusinessOperationRecord> getPrimaryKey() {
        return Keys.KEY_BUSINESS_OPERATION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BusinessOperationRecord>> getKeys() {
        return Arrays.<UniqueKey<BusinessOperationRecord>>asList(Keys.KEY_BUSINESS_OPERATION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BusinessOperation as(String alias) {
        return new BusinessOperation(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BusinessOperation as(Name alias) {
        return new BusinessOperation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BusinessOperation rename(String name) {
        return new BusinessOperation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BusinessOperation rename(Name name) {
        return new BusinessOperation(name, null);
    }
}
