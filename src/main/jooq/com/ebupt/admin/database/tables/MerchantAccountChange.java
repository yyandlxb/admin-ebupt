/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.MerchantAccountChangeRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 商户运费贷账户变更记录
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MerchantAccountChange extends TableImpl<MerchantAccountChangeRecord> {

    private static final long serialVersionUID = -536374471;

    /**
     * The reference instance of <code>st.merchant_account_change</code>
     */
    public static final MerchantAccountChange MERCHANT_ACCOUNT_CHANGE = new MerchantAccountChange();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MerchantAccountChangeRecord> getRecordType() {
        return MerchantAccountChangeRecord.class;
    }

    /**
     * The column <code>st.merchant_account_change.id</code>.
     */
    public final TableField<MerchantAccountChangeRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>st.merchant_account_change.no</code>.
     */
    public final TableField<MerchantAccountChangeRecord, String> NO = createField("no", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>st.merchant_account_change.account_id</code>.
     */
    public final TableField<MerchantAccountChangeRecord, Integer> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>st.merchant_account_change.type</code>.
     */
    public final TableField<MerchantAccountChangeRecord, Byte> TYPE = createField("type", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>st.merchant_account_change.delta</code>. 账户变化值
     */
    public final TableField<MerchantAccountChangeRecord, Integer> DELTA = createField("delta", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "账户变化值");

    /**
     * The column <code>st.merchant_account_change.after</code>. 此次变更后账户金额
     */
    public final TableField<MerchantAccountChangeRecord, Integer> AFTER = createField("after", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "此次变更后账户金额");

    /**
     * The column <code>st.merchant_account_change.detail</code>. 账户各项变更明细
     */
    public final TableField<MerchantAccountChangeRecord, String> DETAIL = createField("detail", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "账户各项变更明细");

    /**
     * The column <code>st.merchant_account_change.description</code>.
     */
    public final TableField<MerchantAccountChangeRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR(150), this, "");

    /**
     * The column <code>st.merchant_account_change.remark</code>. 财务后台添加备注
     */
    public final TableField<MerchantAccountChangeRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(50), this, "财务后台添加备注");

    /**
     * The column <code>st.merchant_account_change.merchant_remark</code>. 商户添加备注
     */
    public final TableField<MerchantAccountChangeRecord, String> MERCHANT_REMARK = createField("merchant_remark", org.jooq.impl.SQLDataType.VARCHAR(50), this, "商户添加备注");

    /**
     * The column <code>st.merchant_account_change.created_at</code>.
     */
    public final TableField<MerchantAccountChangeRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.merchant_account_change.updated_at</code>.
     */
    public final TableField<MerchantAccountChangeRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.merchant_account_change.revoked</code>.
     */
    public final TableField<MerchantAccountChangeRecord, Boolean> REVOKED = createField("revoked", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "");

    /**
     * Create a <code>st.merchant_account_change</code> table reference
     */
    public MerchantAccountChange() {
        this(DSL.name("merchant_account_change"), null);
    }

    /**
     * Create an aliased <code>st.merchant_account_change</code> table reference
     */
    public MerchantAccountChange(String alias) {
        this(DSL.name(alias), MERCHANT_ACCOUNT_CHANGE);
    }

    /**
     * Create an aliased <code>st.merchant_account_change</code> table reference
     */
    public MerchantAccountChange(Name alias) {
        this(alias, MERCHANT_ACCOUNT_CHANGE);
    }

    private MerchantAccountChange(Name alias, Table<MerchantAccountChangeRecord> aliased) {
        this(alias, aliased, null);
    }

    private MerchantAccountChange(Name alias, Table<MerchantAccountChangeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "商户运费贷账户变更记录");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MERCHANT_ACCOUNT_CHANGE_IDX_MERCHANT_ACCOUNT_CHANGE_AID, Indexes.MERCHANT_ACCOUNT_CHANGE_PRIMARY, Indexes.MERCHANT_ACCOUNT_CHANGE_UK_MERCHANT_ACCOUNT_CHANGE_NO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MerchantAccountChangeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MERCHANT_ACCOUNT_CHANGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MerchantAccountChangeRecord> getPrimaryKey() {
        return Keys.KEY_MERCHANT_ACCOUNT_CHANGE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MerchantAccountChangeRecord>> getKeys() {
        return Arrays.<UniqueKey<MerchantAccountChangeRecord>>asList(Keys.KEY_MERCHANT_ACCOUNT_CHANGE_PRIMARY, Keys.KEY_MERCHANT_ACCOUNT_CHANGE_UK_MERCHANT_ACCOUNT_CHANGE_NO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MerchantAccountChange as(String alias) {
        return new MerchantAccountChange(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MerchantAccountChange as(Name alias) {
        return new MerchantAccountChange(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MerchantAccountChange rename(String name) {
        return new MerchantAccountChange(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MerchantAccountChange rename(Name name) {
        return new MerchantAccountChange(name, null);
    }
}
