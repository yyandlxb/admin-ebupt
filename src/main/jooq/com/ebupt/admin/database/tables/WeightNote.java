/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.WeightNoteRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 磅单表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WeightNote extends TableImpl<WeightNoteRecord> {

    private static final long serialVersionUID = -432249171;

    /**
     * The reference instance of <code>st.weight_note</code>
     */
    public static final WeightNote WEIGHT_NOTE = new WeightNote();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WeightNoteRecord> getRecordType() {
        return WeightNoteRecord.class;
    }

    /**
     * The column <code>st.weight_note.id</code>.
     */
    public final TableField<WeightNoteRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>st.weight_note.code</code>. 磅单号
     */
    public final TableField<WeightNoteRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(20), this, "磅单号");

    /**
     * The column <code>st.weight_note.plate_number</code>. 车牌号
     */
    public final TableField<WeightNoteRecord, String> PLATE_NUMBER = createField("plate_number", org.jooq.impl.SQLDataType.VARCHAR(8).nullable(false), this, "车牌号");

    /**
     * The column <code>st.weight_note.gross_weight</code>. 毛重
     */
    public final TableField<WeightNoteRecord, BigDecimal> GROSS_WEIGHT = createField("gross_weight", org.jooq.impl.SQLDataType.DECIMAL(15, 2).nullable(false), this, "毛重");

    /**
     * The column <code>st.weight_note.tare_weight</code>. 皮重
     */
    public final TableField<WeightNoteRecord, BigDecimal> TARE_WEIGHT = createField("tare_weight", org.jooq.impl.SQLDataType.DECIMAL(15, 2), this, "皮重");

    /**
     * The column <code>st.weight_note.estimate_tare_weight</code>. 预估皮重
     */
    public final TableField<WeightNoteRecord, BigDecimal> ESTIMATE_TARE_WEIGHT = createField("estimate_tare_weight", org.jooq.impl.SQLDataType.DECIMAL(15, 2).nullable(false), this, "预估皮重");

    /**
     * The column <code>st.weight_note.load_weight</code>. 已装车总量
     */
    public final TableField<WeightNoteRecord, BigDecimal> LOAD_WEIGHT = createField("load_weight", org.jooq.impl.SQLDataType.DECIMAL(15, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "已装车总量");

    /**
     * The column <code>st.weight_note.first_weigh_time</code>. 第一次过磅时间
     */
    public final TableField<WeightNoteRecord, Timestamp> FIRST_WEIGH_TIME = createField("first_weigh_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "第一次过磅时间");

    /**
     * The column <code>st.weight_note.second_weigh_time</code>. 第二次过磅时间
     */
    public final TableField<WeightNoteRecord, Timestamp> SECOND_WEIGH_TIME = createField("second_weigh_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "第二次过磅时间");

    /**
     * The column <code>st.weight_note.merchant_id</code>. 商户id
     */
    public final TableField<WeightNoteRecord, Integer> MERCHANT_ID = createField("merchant_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "商户id");

    /**
     * The column <code>st.weight_note.line_id</code>. 线路id
     */
    public final TableField<WeightNoteRecord, Integer> LINE_ID = createField("line_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "线路id");

    /**
     * The column <code>st.weight_note.enabled</code>. 是否可用
     */
    public final TableField<WeightNoteRecord, Boolean> ENABLED = createField("enabled", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'1'", org.jooq.impl.SQLDataType.BIT)), this, "是否可用");

    /**
     * The column <code>st.weight_note.status</code>. 0-未全部发车，1-全部发车
     */
    public final TableField<WeightNoteRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "0-未全部发车，1-全部发车");

    /**
     * The column <code>st.weight_note.created_at</code>.
     */
    public final TableField<WeightNoteRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.weight_note.updated_at</code>.
     */
    public final TableField<WeightNoteRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>st.weight_note</code> table reference
     */
    public WeightNote() {
        this(DSL.name("weight_note"), null);
    }

    /**
     * Create an aliased <code>st.weight_note</code> table reference
     */
    public WeightNote(String alias) {
        this(DSL.name(alias), WEIGHT_NOTE);
    }

    /**
     * Create an aliased <code>st.weight_note</code> table reference
     */
    public WeightNote(Name alias) {
        this(alias, WEIGHT_NOTE);
    }

    private WeightNote(Name alias, Table<WeightNoteRecord> aliased) {
        this(alias, aliased, null);
    }

    private WeightNote(Name alias, Table<WeightNoteRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "磅单表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.WEIGHT_NOTE_IDX_LINE_ID, Indexes.WEIGHT_NOTE_IDX_MERCHANT_ID, Indexes.WEIGHT_NOTE_PRIMARY, Indexes.WEIGHT_NOTE_UK_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<WeightNoteRecord, Integer> getIdentity() {
        return Keys.IDENTITY_WEIGHT_NOTE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WeightNoteRecord> getPrimaryKey() {
        return Keys.KEY_WEIGHT_NOTE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WeightNoteRecord>> getKeys() {
        return Arrays.<UniqueKey<WeightNoteRecord>>asList(Keys.KEY_WEIGHT_NOTE_PRIMARY, Keys.KEY_WEIGHT_NOTE_UK_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WeightNote as(String alias) {
        return new WeightNote(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WeightNote as(Name alias) {
        return new WeightNote(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WeightNote rename(String name) {
        return new WeightNote(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WeightNote rename(Name name) {
        return new WeightNote(name, null);
    }
}
