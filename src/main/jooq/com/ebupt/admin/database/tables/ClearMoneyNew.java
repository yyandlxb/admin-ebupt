/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.ClearMoneyNewRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClearMoneyNew extends TableImpl<ClearMoneyNewRecord> {

    private static final long serialVersionUID = 1506417710;

    /**
     * The reference instance of <code>st.clear_money_new</code>
     */
    public static final ClearMoneyNew CLEAR_MONEY_NEW = new ClearMoneyNew();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClearMoneyNewRecord> getRecordType() {
        return ClearMoneyNewRecord.class;
    }

    /**
     * The column <code>st.clear_money_new.id</code>.
     */
    public final TableField<ClearMoneyNewRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>st.clear_money_new.business_id</code>. 商户ID
     */
    public final TableField<ClearMoneyNewRecord, Integer> BUSINESS_ID = createField("business_id", org.jooq.impl.SQLDataType.INTEGER, this, "商户ID");

    /**
     * The column <code>st.clear_money_new.line_id</code>. 线路ID
     */
    public final TableField<ClearMoneyNewRecord, Integer> LINE_ID = createField("line_id", org.jooq.impl.SQLDataType.INTEGER, this, "线路ID");

    /**
     * The column <code>st.clear_money_new.bank_card_name</code>. 银行名称
     */
    public final TableField<ClearMoneyNewRecord, String> BANK_CARD_NAME = createField("bank_card_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "银行名称");

    /**
     * The column <code>st.clear_money_new.opening_bank_name</code>. 开户行名称
     */
    public final TableField<ClearMoneyNewRecord, String> OPENING_BANK_NAME = createField("opening_bank_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "开户行名称");

    /**
     * The column <code>st.clear_money_new.bank_card_number</code>. 卡号
     */
    public final TableField<ClearMoneyNewRecord, String> BANK_CARD_NUMBER = createField("bank_card_number", org.jooq.impl.SQLDataType.VARCHAR(255), this, "卡号");

    /**
     * The column <code>st.clear_money_new.name</code>. 姓名
     */
    public final TableField<ClearMoneyNewRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "姓名");

    /**
     * The column <code>st.clear_money_new.clear_money</code>.
     */
    public final TableField<ClearMoneyNewRecord, BigDecimal> CLEAR_MONEY = createField("clear_money", org.jooq.impl.SQLDataType.DECIMAL(20, 2), this, "");

    /**
     * The column <code>st.clear_money_new.money_status</code>. 1,运费，2，垫付款，3，代收款
     */
    public final TableField<ClearMoneyNewRecord, Integer> MONEY_STATUS = createField("money_status", org.jooq.impl.SQLDataType.INTEGER, this, "1,运费，2，垫付款，3，代收款");

    /**
     * The column <code>st.clear_money_new.bcr_id</code>. 报表ID
     */
    public final TableField<ClearMoneyNewRecord, Integer> BCR_ID = createField("bcr_id", org.jooq.impl.SQLDataType.INTEGER, this, "报表ID");

    /**
     * The column <code>st.clear_money_new.user_phone</code>. 清分人账号
     */
    public final TableField<ClearMoneyNewRecord, String> USER_PHONE = createField("user_phone", org.jooq.impl.SQLDataType.VARCHAR(255), this, "清分人账号");

    /**
     * The column <code>st.clear_money_new.bcr_time</code>. 报表日期
     */
    public final TableField<ClearMoneyNewRecord, Timestamp> BCR_TIME = createField("bcr_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "报表日期");

    /**
     * The column <code>st.clear_money_new.clear_money_time</code>. 实际清分日期
     */
    public final TableField<ClearMoneyNewRecord, Timestamp> CLEAR_MONEY_TIME = createField("clear_money_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "实际清分日期");

    /**
     * The column <code>st.clear_money_new.clear_money_need_time</code>. 应清分日期
     */
    public final TableField<ClearMoneyNewRecord, Timestamp> CLEAR_MONEY_NEED_TIME = createField("clear_money_need_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "应清分日期");

    /**
     * The column <code>st.clear_money_new.created_at</code>.
     */
    public final TableField<ClearMoneyNewRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.clear_money_new.updated_at</code>.
     */
    public final TableField<ClearMoneyNewRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.clear_money_new.status</code>. 1,待支付，2，等待中,3，支付中，4，支付成功，5，支付失败
     */
    public final TableField<ClearMoneyNewRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "1,待支付，2，等待中,3，支付中，4，支付成功，5，支付失败");

    /**
     * The column <code>st.clear_money_new.province_number</code>. 省份号
     */
    public final TableField<ClearMoneyNewRecord, String> PROVINCE_NUMBER = createField("province_number", org.jooq.impl.SQLDataType.VARCHAR(10), this, "省份号");

    /**
     * The column <code>st.clear_money_new.clear_money_code</code>. 清分流水号
     */
    public final TableField<ClearMoneyNewRecord, String> CLEAR_MONEY_CODE = createField("clear_money_code", org.jooq.impl.SQLDataType.VARCHAR(255), this, "清分流水号");

    /**
     * The column <code>st.clear_money_new.bank_code</code>. 银行Code
     */
    public final TableField<ClearMoneyNewRecord, String> BANK_CODE = createField("bank_code", org.jooq.impl.SQLDataType.VARCHAR(255), this, "银行Code");

    /**
     * The column <code>st.clear_money_new.opening_bank_code</code>. 开户行行号
     */
    public final TableField<ClearMoneyNewRecord, String> OPENING_BANK_CODE = createField("opening_bank_code", org.jooq.impl.SQLDataType.VARCHAR(255), this, "开户行行号");

    /**
     * The column <code>st.clear_money_new.message</code>. 原因
     */
    public final TableField<ClearMoneyNewRecord, String> MESSAGE = createField("message", org.jooq.impl.SQLDataType.VARCHAR(255), this, "原因");

    /**
     * The column <code>st.clear_money_new.bank_card_id</code>. 银行卡ID
     */
    public final TableField<ClearMoneyNewRecord, Integer> BANK_CARD_ID = createField("bank_card_id", org.jooq.impl.SQLDataType.INTEGER, this, "银行卡ID");

    /**
     * The column <code>st.clear_money_new.enabled</code>.
     */
    public final TableField<ClearMoneyNewRecord, Boolean> ENABLED = createField("enabled", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'1'", org.jooq.impl.SQLDataType.BIT)), this, "");

    /**
     * The column <code>st.clear_money_new.month_record_id</code>. 代收款手续费月对账ID
     */
    public final TableField<ClearMoneyNewRecord, Integer> MONTH_RECORD_ID = createField("month_record_id", org.jooq.impl.SQLDataType.INTEGER, this, "代收款手续费月对账ID");

    /**
     * Create a <code>st.clear_money_new</code> table reference
     */
    public ClearMoneyNew() {
        this(DSL.name("clear_money_new"), null);
    }

    /**
     * Create an aliased <code>st.clear_money_new</code> table reference
     */
    public ClearMoneyNew(String alias) {
        this(DSL.name(alias), CLEAR_MONEY_NEW);
    }

    /**
     * Create an aliased <code>st.clear_money_new</code> table reference
     */
    public ClearMoneyNew(Name alias) {
        this(alias, CLEAR_MONEY_NEW);
    }

    private ClearMoneyNew(Name alias, Table<ClearMoneyNewRecord> aliased) {
        this(alias, aliased, null);
    }

    private ClearMoneyNew(Name alias, Table<ClearMoneyNewRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CLEAR_MONEY_NEW_CLEAR_MONEY_CODE, Indexes.CLEAR_MONEY_NEW_IDX_BCR_ID, Indexes.CLEAR_MONEY_NEW_IDX_BUSINESS_ID, Indexes.CLEAR_MONEY_NEW_IDX_LINE_ID, Indexes.CLEAR_MONEY_NEW_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ClearMoneyNewRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CLEAR_MONEY_NEW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ClearMoneyNewRecord> getPrimaryKey() {
        return Keys.KEY_CLEAR_MONEY_NEW_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ClearMoneyNewRecord>> getKeys() {
        return Arrays.<UniqueKey<ClearMoneyNewRecord>>asList(Keys.KEY_CLEAR_MONEY_NEW_PRIMARY, Keys.KEY_CLEAR_MONEY_NEW_CLEAR_MONEY_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClearMoneyNew as(String alias) {
        return new ClearMoneyNew(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClearMoneyNew as(Name alias) {
        return new ClearMoneyNew(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ClearMoneyNew rename(String name) {
        return new ClearMoneyNew(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ClearMoneyNew rename(Name name) {
        return new ClearMoneyNew(name, null);
    }
}
