/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.CollectionFeeRecordRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CollectionFeeRecord extends TableImpl<CollectionFeeRecordRecord> {

    private static final long serialVersionUID = 1851807964;

    /**
     * The reference instance of <code>st.collection_fee_record</code>
     */
    public static final CollectionFeeRecord COLLECTION_FEE_RECORD = new CollectionFeeRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CollectionFeeRecordRecord> getRecordType() {
        return CollectionFeeRecordRecord.class;
    }

    /**
     * The column <code>st.collection_fee_record.id</code>.
     */
    public final TableField<CollectionFeeRecordRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>st.collection_fee_record.line_code</code>.
     */
    public final TableField<CollectionFeeRecordRecord, String> LINE_CODE = createField("line_code", org.jooq.impl.SQLDataType.VARCHAR(3), this, "");

    /**
     * The column <code>st.collection_fee_record.business_id</code>.
     */
    public final TableField<CollectionFeeRecordRecord, Integer> BUSINESS_ID = createField("business_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>st.collection_fee_record.early_moeny</code>. 期初结余金额
     */
    public final TableField<CollectionFeeRecordRecord, Integer> EARLY_MOENY = createField("early_moeny", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "期初结余金额");

    /**
     * The column <code>st.collection_fee_record.early_num</code>. 期初结余票数
     */
    public final TableField<CollectionFeeRecordRecord, Integer> EARLY_NUM = createField("early_num", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "期初结余票数");

    /**
     * The column <code>st.collection_fee_record.finished_today_money</code>. 当日办结代收款金额
     */
    public final TableField<CollectionFeeRecordRecord, Integer> FINISHED_TODAY_MONEY = createField("finished_today_money", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "当日办结代收款金额");

    /**
     * The column <code>st.collection_fee_record.finished_today_num</code>. 当日办结代收款票数
     */
    public final TableField<CollectionFeeRecordRecord, Integer> FINISHED_TODAY_NUM = createField("finished_today_num", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "当日办结代收款票数");

    /**
     * The column <code>st.collection_fee_record.extract_collection_fee</code>. 客户已提代收款金额
     */
    public final TableField<CollectionFeeRecordRecord, Integer> EXTRACT_COLLECTION_FEE = createField("extract_collection_fee", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "客户已提代收款金额");

    /**
     * The column <code>st.collection_fee_record.extract_collection_fee_num</code>. 客户已提代收款票数
     */
    public final TableField<CollectionFeeRecordRecord, Integer> EXTRACT_COLLECTION_FEE_NUM = createField("extract_collection_fee_num", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "客户已提代收款票数");

    /**
     * The column <code>st.collection_fee_record.service_charge_hlvan</code>. 凌华手续费
     */
    public final TableField<CollectionFeeRecordRecord, Integer> SERVICE_CHARGE_HLVAN = createField("service_charge_hlvan", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "凌华手续费");

    /**
     * The column <code>st.collection_fee_record.service_charge_hlvan_num</code>. 凌华手续费票数
     */
    public final TableField<CollectionFeeRecordRecord, Integer> SERVICE_CHARGE_HLVAN_NUM = createField("service_charge_hlvan_num", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "凌华手续费票数");

    /**
     * The column <code>st.collection_fee_record.service_charge_business</code>. 托运部手续费金额
     */
    public final TableField<CollectionFeeRecordRecord, Integer> SERVICE_CHARGE_BUSINESS = createField("service_charge_business", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "托运部手续费金额");

    /**
     * The column <code>st.collection_fee_record.service_charge_business_num</code>. 托运部手续费票数
     */
    public final TableField<CollectionFeeRecordRecord, Integer> SERVICE_CHARGE_BUSINESS_NUM = createField("service_charge_business_num", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "托运部手续费票数");

    /**
     * The column <code>st.collection_fee_record.actual_extract_moeny</code>. 实际提取金额
     */
    public final TableField<CollectionFeeRecordRecord, Integer> ACTUAL_EXTRACT_MOENY = createField("actual_extract_moeny", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "实际提取金额");

    /**
     * The column <code>st.collection_fee_record.actual_extract_num</code>. 实际提取票数
     */
    public final TableField<CollectionFeeRecordRecord, Integer> ACTUAL_EXTRACT_NUM = createField("actual_extract_num", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "实际提取票数");

    /**
     * The column <code>st.collection_fee_record.final_moeny</code>. 期末结余金额
     */
    public final TableField<CollectionFeeRecordRecord, Integer> FINAL_MOENY = createField("final_moeny", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "期末结余金额");

    /**
     * The column <code>st.collection_fee_record.final_num</code>. 期末结余票数
     */
    public final TableField<CollectionFeeRecordRecord, Integer> FINAL_NUM = createField("final_num", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "期末结余票数");

    /**
     * The column <code>st.collection_fee_record.remrak</code>. 备注
     */
    public final TableField<CollectionFeeRecordRecord, String> REMRAK = createField("remrak", org.jooq.impl.SQLDataType.VARCHAR(100), this, "备注");

    /**
     * The column <code>st.collection_fee_record.payment_at</code>.
     */
    public final TableField<CollectionFeeRecordRecord, Timestamp> PAYMENT_AT = createField("payment_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>st.collection_fee_record.created_at</code>.
     */
    public final TableField<CollectionFeeRecordRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.collection_fee_record.updated_at</code>.
     */
    public final TableField<CollectionFeeRecordRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>st.collection_fee_record</code> table reference
     */
    public CollectionFeeRecord() {
        this(DSL.name("collection_fee_record"), null);
    }

    /**
     * Create an aliased <code>st.collection_fee_record</code> table reference
     */
    public CollectionFeeRecord(String alias) {
        this(DSL.name(alias), COLLECTION_FEE_RECORD);
    }

    /**
     * Create an aliased <code>st.collection_fee_record</code> table reference
     */
    public CollectionFeeRecord(Name alias) {
        this(alias, COLLECTION_FEE_RECORD);
    }

    private CollectionFeeRecord(Name alias, Table<CollectionFeeRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private CollectionFeeRecord(Name alias, Table<CollectionFeeRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.COLLECTION_FEE_RECORD_IDX_BUSINESS_ID, Indexes.COLLECTION_FEE_RECORD_IDX_LINE_CODE, Indexes.COLLECTION_FEE_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CollectionFeeRecordRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COLLECTION_FEE_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CollectionFeeRecordRecord> getPrimaryKey() {
        return Keys.KEY_COLLECTION_FEE_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CollectionFeeRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<CollectionFeeRecordRecord>>asList(Keys.KEY_COLLECTION_FEE_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CollectionFeeRecord as(String alias) {
        return new CollectionFeeRecord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CollectionFeeRecord as(Name alias) {
        return new CollectionFeeRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CollectionFeeRecord rename(String name) {
        return new CollectionFeeRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CollectionFeeRecord rename(Name name) {
        return new CollectionFeeRecord(name, null);
    }
}
