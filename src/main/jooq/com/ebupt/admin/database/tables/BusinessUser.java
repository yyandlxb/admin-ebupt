/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.BusinessUserRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BusinessUser extends TableImpl<BusinessUserRecord> {

    private static final long serialVersionUID = 1339611820;

    /**
     * The reference instance of <code>st.business_user</code>
     */
    public static final BusinessUser BUSINESS_USER = new BusinessUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BusinessUserRecord> getRecordType() {
        return BusinessUserRecord.class;
    }

    /**
     * The column <code>st.business_user.id</code>.
     */
    public final TableField<BusinessUserRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>st.business_user.user_name</code>. 用户名
     */
    public final TableField<BusinessUserRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "用户名");

    /**
     * The column <code>st.business_user.user_phone</code>. 用户手机号
     */
    public final TableField<BusinessUserRecord, String> USER_PHONE = createField("user_phone", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "用户手机号");

    /**
     * The column <code>st.business_user.password</code>. 密码
     */
    public final TableField<BusinessUserRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "密码");

    /**
     * The column <code>st.business_user.create_time</code>. 创建时间
     */
    public final TableField<BusinessUserRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>st.business_user.business_id</code>. 商户ID
     */
    public final TableField<BusinessUserRecord, Integer> BUSINESS_ID = createField("business_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "商户ID");

    /**
     * The column <code>st.business_user.route_code</code>. 线路code字符串
     */
    public final TableField<BusinessUserRecord, String> ROUTE_CODE = createField("route_code", org.jooq.impl.SQLDataType.VARCHAR(255), this, "线路code字符串");

    /**
     * The column <code>st.business_user.is_delete</code>. 0,启动，1，删除
     */
    public final TableField<BusinessUserRecord, String> IS_DELETE = createField("is_delete", org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "0,启动，1，删除");

    /**
     * The column <code>st.business_user.type</code>. 用户类型：1超级管理员；2自主办票员
     */
    public final TableField<BusinessUserRecord, Byte> TYPE = createField("type", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "用户类型：1超级管理员；2自主办票员");

    /**
     * The column <code>st.business_user.disabled</code>. 封号标识位
     */
    public final TableField<BusinessUserRecord, Boolean> DISABLED = createField("disabled", org.jooq.impl.SQLDataType.BIT.defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "封号标识位");

    /**
     * The column <code>st.business_user.deleted</code>. 删除标志位
     */
    public final TableField<BusinessUserRecord, Boolean> DELETED = createField("deleted", org.jooq.impl.SQLDataType.BIT.defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志位");

    /**
     * The column <code>st.business_user.created_at</code>.
     */
    public final TableField<BusinessUserRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.business_user.updated_at</code>.
     */
    public final TableField<BusinessUserRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>st.business_user</code> table reference
     */
    public BusinessUser() {
        this(DSL.name("business_user"), null);
    }

    /**
     * Create an aliased <code>st.business_user</code> table reference
     */
    public BusinessUser(String alias) {
        this(DSL.name(alias), BUSINESS_USER);
    }

    /**
     * Create an aliased <code>st.business_user</code> table reference
     */
    public BusinessUser(Name alias) {
        this(alias, BUSINESS_USER);
    }

    private BusinessUser(Name alias, Table<BusinessUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private BusinessUser(Name alias, Table<BusinessUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BUSINESS_USER_PRIMARY, Indexes.BUSINESS_USER_UK_USER_PHONE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BusinessUserRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BUSINESS_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BusinessUserRecord> getPrimaryKey() {
        return Keys.KEY_BUSINESS_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BusinessUserRecord>> getKeys() {
        return Arrays.<UniqueKey<BusinessUserRecord>>asList(Keys.KEY_BUSINESS_USER_PRIMARY, Keys.KEY_BUSINESS_USER_UK_USER_PHONE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BusinessUser as(String alias) {
        return new BusinessUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BusinessUser as(Name alias) {
        return new BusinessUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BusinessUser rename(String name) {
        return new BusinessUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BusinessUser rename(Name name) {
        return new BusinessUser(name, null);
    }
}
