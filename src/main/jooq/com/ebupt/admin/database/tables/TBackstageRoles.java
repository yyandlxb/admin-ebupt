/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.TBackstageRolesRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TBackstageRoles extends TableImpl<TBackstageRolesRecord> {

    private static final long serialVersionUID = -1338359537;

    /**
     * The reference instance of <code>st.t_backstage_roles</code>
     */
    public static final TBackstageRoles T_BACKSTAGE_ROLES = new TBackstageRoles();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TBackstageRolesRecord> getRecordType() {
        return TBackstageRolesRecord.class;
    }

    /**
     * The column <code>st.t_backstage_roles.id</code>.
     */
    public final TableField<TBackstageRolesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>st.t_backstage_roles.role_name</code>. 角色名称
     */
    public final TableField<TBackstageRolesRecord, String> ROLE_NAME = createField("role_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "角色名称");

    /**
     * The column <code>st.t_backstage_roles.create_time</code>.
     */
    public final TableField<TBackstageRolesRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>st.t_backstage_roles</code> table reference
     */
    public TBackstageRoles() {
        this(DSL.name("t_backstage_roles"), null);
    }

    /**
     * Create an aliased <code>st.t_backstage_roles</code> table reference
     */
    public TBackstageRoles(String alias) {
        this(DSL.name(alias), T_BACKSTAGE_ROLES);
    }

    /**
     * Create an aliased <code>st.t_backstage_roles</code> table reference
     */
    public TBackstageRoles(Name alias) {
        this(alias, T_BACKSTAGE_ROLES);
    }

    private TBackstageRoles(Name alias, Table<TBackstageRolesRecord> aliased) {
        this(alias, aliased, null);
    }

    private TBackstageRoles(Name alias, Table<TBackstageRolesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_BACKSTAGE_ROLES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TBackstageRolesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_BACKSTAGE_ROLES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TBackstageRolesRecord> getPrimaryKey() {
        return Keys.KEY_T_BACKSTAGE_ROLES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TBackstageRolesRecord>> getKeys() {
        return Arrays.<UniqueKey<TBackstageRolesRecord>>asList(Keys.KEY_T_BACKSTAGE_ROLES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TBackstageRoles as(String alias) {
        return new TBackstageRoles(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TBackstageRoles as(Name alias) {
        return new TBackstageRoles(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TBackstageRoles rename(String name) {
        return new TBackstageRoles(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TBackstageRoles rename(Name name) {
        return new TBackstageRoles(name, null);
    }
}
