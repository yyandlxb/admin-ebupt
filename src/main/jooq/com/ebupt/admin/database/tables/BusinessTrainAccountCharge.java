/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.BusinessTrainAccountChargeRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 商户账户充值
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BusinessTrainAccountCharge extends TableImpl<BusinessTrainAccountChargeRecord> {

    private static final long serialVersionUID = -489947892;

    /**
     * The reference instance of <code>st.business_train_account_charge</code>
     */
    public static final BusinessTrainAccountCharge BUSINESS_TRAIN_ACCOUNT_CHARGE = new BusinessTrainAccountCharge();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BusinessTrainAccountChargeRecord> getRecordType() {
        return BusinessTrainAccountChargeRecord.class;
    }

    /**
     * The column <code>st.business_train_account_charge.id</code>.
     */
    public final TableField<BusinessTrainAccountChargeRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>st.business_train_account_charge.no</code>.
     */
    public final TableField<BusinessTrainAccountChargeRecord, String> NO = createField("no", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>st.business_train_account_charge.method</code>.
     */
    public final TableField<BusinessTrainAccountChargeRecord, Byte> METHOD = createField("method", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>st.business_train_account_charge.account_id</code>.
     */
    public final TableField<BusinessTrainAccountChargeRecord, Integer> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>st.business_train_account_charge.price</code>.
     */
    public final TableField<BusinessTrainAccountChargeRecord, Integer> PRICE = createField("price", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>st.business_train_account_charge.expire_time</code>.
     */
    public final TableField<BusinessTrainAccountChargeRecord, Timestamp> EXPIRE_TIME = createField("expire_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.business_train_account_charge.status</code>.
     */
    public final TableField<BusinessTrainAccountChargeRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>st.business_train_account_charge.trade_no</code>.
     */
    public final TableField<BusinessTrainAccountChargeRecord, String> TRADE_NO = createField("trade_no", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>st.business_train_account_charge.paid_at</code>.
     */
    public final TableField<BusinessTrainAccountChargeRecord, Timestamp> PAID_AT = createField("paid_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>st.business_train_account_charge.created_at</code>.
     */
    public final TableField<BusinessTrainAccountChargeRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.business_train_account_charge.updated_at</code>.
     */
    public final TableField<BusinessTrainAccountChargeRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>st.business_train_account_charge</code> table reference
     */
    public BusinessTrainAccountCharge() {
        this(DSL.name("business_train_account_charge"), null);
    }

    /**
     * Create an aliased <code>st.business_train_account_charge</code> table reference
     */
    public BusinessTrainAccountCharge(String alias) {
        this(DSL.name(alias), BUSINESS_TRAIN_ACCOUNT_CHARGE);
    }

    /**
     * Create an aliased <code>st.business_train_account_charge</code> table reference
     */
    public BusinessTrainAccountCharge(Name alias) {
        this(alias, BUSINESS_TRAIN_ACCOUNT_CHARGE);
    }

    private BusinessTrainAccountCharge(Name alias, Table<BusinessTrainAccountChargeRecord> aliased) {
        this(alias, aliased, null);
    }

    private BusinessTrainAccountCharge(Name alias, Table<BusinessTrainAccountChargeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "商户账户充值");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BUSINESS_TRAIN_ACCOUNT_CHARGE_IDX_MERCHANT_ACCOUNT_CHARGE_AID, Indexes.BUSINESS_TRAIN_ACCOUNT_CHARGE_IDX_MERCHANT_ACCOUNT_CHARGE_EXPIRE, Indexes.BUSINESS_TRAIN_ACCOUNT_CHARGE_PRIMARY, Indexes.BUSINESS_TRAIN_ACCOUNT_CHARGE_UK_MERCHANT_ACCOUNT_CHARGE_ON);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BusinessTrainAccountChargeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BUSINESS_TRAIN_ACCOUNT_CHARGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BusinessTrainAccountChargeRecord> getPrimaryKey() {
        return Keys.KEY_BUSINESS_TRAIN_ACCOUNT_CHARGE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BusinessTrainAccountChargeRecord>> getKeys() {
        return Arrays.<UniqueKey<BusinessTrainAccountChargeRecord>>asList(Keys.KEY_BUSINESS_TRAIN_ACCOUNT_CHARGE_PRIMARY, Keys.KEY_BUSINESS_TRAIN_ACCOUNT_CHARGE_UK_MERCHANT_ACCOUNT_CHARGE_ON);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BusinessTrainAccountCharge as(String alias) {
        return new BusinessTrainAccountCharge(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BusinessTrainAccountCharge as(Name alias) {
        return new BusinessTrainAccountCharge(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BusinessTrainAccountCharge rename(String name) {
        return new BusinessTrainAccountCharge(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BusinessTrainAccountCharge rename(Name name) {
        return new BusinessTrainAccountCharge(name, null);
    }
}
