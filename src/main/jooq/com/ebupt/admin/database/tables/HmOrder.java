/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.HmOrderRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HmOrder extends TableImpl<HmOrderRecord> {

    private static final long serialVersionUID = 254813777;

    /**
     * The reference instance of <code>st.hm_order</code>
     */
    public static final HmOrder HM_ORDER = new HmOrder();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HmOrderRecord> getRecordType() {
        return HmOrderRecord.class;
    }

    /**
     * The column <code>st.hm_order.id</code>.
     */
    public final TableField<HmOrderRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>st.hm_order.pack_code</code>. 打包code
     */
    public final TableField<HmOrderRecord, String> PACK_CODE = createField("pack_code", org.jooq.impl.SQLDataType.VARCHAR(255), this, "打包code");

    /**
     * The column <code>st.hm_order.status</code>. 1 待发车 2 待送达 3 已送达 4 已打款
     */
    public final TableField<HmOrderRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR(2), this, "1 待发车 2 待送达 3 已送达 4 已打款");

    /**
     * The column <code>st.hm_order.driver_fee</code>. 司机运费
     */
    public final TableField<HmOrderRecord, BigDecimal> DRIVER_FEE = createField("driver_fee", org.jooq.impl.SQLDataType.DECIMAL(20, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "司机运费");

    /**
     * The column <code>st.hm_order.st_business_id</code>. 零担商户id
     */
    public final TableField<HmOrderRecord, Integer> ST_BUSINESS_ID = createField("st_business_id", org.jooq.impl.SQLDataType.INTEGER, this, "零担商户id");

    /**
     * The column <code>st.hm_order.driver_vehicle_id</code>. 司机综合id
     */
    public final TableField<HmOrderRecord, Integer> DRIVER_VEHICLE_ID = createField("driver_vehicle_id", org.jooq.impl.SQLDataType.INTEGER, this, "司机综合id");

    /**
     * The column <code>st.hm_order.goods_number</code>. 总货物数量
     */
    public final TableField<HmOrderRecord, Integer> GOODS_NUMBER = createField("goods_number", org.jooq.impl.SQLDataType.INTEGER, this, "总货物数量");

    /**
     * The column <code>st.hm_order.send_user_name</code>. 发货人姓名
     */
    public final TableField<HmOrderRecord, String> SEND_USER_NAME = createField("send_user_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "发货人姓名");

    /**
     * The column <code>st.hm_order.send_user_phone</code>. 发货人电话
     */
    public final TableField<HmOrderRecord, String> SEND_USER_PHONE = createField("send_user_phone", org.jooq.impl.SQLDataType.VARCHAR(60), this, "发货人电话");

    /**
     * The column <code>st.hm_order.business_name</code>. 商户名
     */
    public final TableField<HmOrderRecord, String> BUSINESS_NAME = createField("business_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "商户名");

    /**
     * The column <code>st.hm_order.hm_line_id</code>. 干线线路id
     */
    public final TableField<HmOrderRecord, Integer> HM_LINE_ID = createField("hm_line_id", org.jooq.impl.SQLDataType.INTEGER, this, "干线线路id");

    /**
     * The column <code>st.hm_order.total_price</code>. 价格总和
     */
    public final TableField<HmOrderRecord, BigDecimal> TOTAL_PRICE = createField("total_price", org.jooq.impl.SQLDataType.DECIMAL(20, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "价格总和");

    /**
     * The column <code>st.hm_order.receiver_phone</code>. 收货人电话
     */
    public final TableField<HmOrderRecord, String> RECEIVER_PHONE = createField("receiver_phone", org.jooq.impl.SQLDataType.VARCHAR(60), this, "收货人电话");

    /**
     * The column <code>st.hm_order.st_line_id</code>. 零担线路id
     */
    public final TableField<HmOrderRecord, Integer> ST_LINE_ID = createField("st_line_id", org.jooq.impl.SQLDataType.INTEGER, this, "零担线路id");

    /**
     * The column <code>st.hm_order.create_time</code>. 创建时间
     */
    public final TableField<HmOrderRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>st.hm_order.update_time</code>. 更新时间
     */
    public final TableField<HmOrderRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * Create a <code>st.hm_order</code> table reference
     */
    public HmOrder() {
        this(DSL.name("hm_order"), null);
    }

    /**
     * Create an aliased <code>st.hm_order</code> table reference
     */
    public HmOrder(String alias) {
        this(DSL.name(alias), HM_ORDER);
    }

    /**
     * Create an aliased <code>st.hm_order</code> table reference
     */
    public HmOrder(Name alias) {
        this(alias, HM_ORDER);
    }

    private HmOrder(Name alias, Table<HmOrderRecord> aliased) {
        this(alias, aliased, null);
    }

    private HmOrder(Name alias, Table<HmOrderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.HM_ORDER_PACK_CODE, Indexes.HM_ORDER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<HmOrderRecord, Integer> getIdentity() {
        return Keys.IDENTITY_HM_ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HmOrderRecord> getPrimaryKey() {
        return Keys.KEY_HM_ORDER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HmOrderRecord>> getKeys() {
        return Arrays.<UniqueKey<HmOrderRecord>>asList(Keys.KEY_HM_ORDER_PRIMARY, Keys.KEY_HM_ORDER_PACK_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HmOrder as(String alias) {
        return new HmOrder(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HmOrder as(Name alias) {
        return new HmOrder(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HmOrder rename(String name) {
        return new HmOrder(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HmOrder rename(Name name) {
        return new HmOrder(name, null);
    }
}
