/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.ClearMoneyLogRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClearMoneyLog extends TableImpl<ClearMoneyLogRecord> {

    private static final long serialVersionUID = 1700736674;

    /**
     * The reference instance of <code>st.clear_money_log</code>
     */
    public static final ClearMoneyLog CLEAR_MONEY_LOG = new ClearMoneyLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClearMoneyLogRecord> getRecordType() {
        return ClearMoneyLogRecord.class;
    }

    /**
     * The column <code>st.clear_money_log.id</code>.
     */
    public final TableField<ClearMoneyLogRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>st.clear_money_log.code</code>. 清分账号
     */
    public final TableField<ClearMoneyLogRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(255), this, "清分账号");

    /**
     * The column <code>st.clear_money_log.status</code>. 1,成功,2,失败
     */
    public final TableField<ClearMoneyLogRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER, this, "1,成功,2,失败");

    /**
     * The column <code>st.clear_money_log.created_at</code>.
     */
    public final TableField<ClearMoneyLogRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.clear_money_log.updated_at</code>.
     */
    public final TableField<ClearMoneyLogRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.clear_money_log.message</code>. 原因
     */
    public final TableField<ClearMoneyLogRecord, String> MESSAGE = createField("message", org.jooq.impl.SQLDataType.VARCHAR(255), this, "原因");

    /**
     * The column <code>st.clear_money_log.bank_card_number</code>. 银行卡号
     */
    public final TableField<ClearMoneyLogRecord, String> BANK_CARD_NUMBER = createField("bank_card_number", org.jooq.impl.SQLDataType.VARCHAR(255), this, "银行卡号");

    /**
     * The column <code>st.clear_money_log.money</code>.
     */
    public final TableField<ClearMoneyLogRecord, BigDecimal> MONEY = createField("money", org.jooq.impl.SQLDataType.DECIMAL(20, 2), this, "");

    /**
     * The column <code>st.clear_money_log.name</code>. 姓名
     */
    public final TableField<ClearMoneyLogRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "姓名");

    /**
     * The column <code>st.clear_money_log.bank_card_name</code>. 银行名称
     */
    public final TableField<ClearMoneyLogRecord, String> BANK_CARD_NAME = createField("bank_card_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "银行名称");

    /**
     * The column <code>st.clear_money_log.bank_code</code>. 银行代码
     */
    public final TableField<ClearMoneyLogRecord, String> BANK_CODE = createField("bank_code", org.jooq.impl.SQLDataType.VARCHAR(255), this, "银行代码");

    /**
     * The column <code>st.clear_money_log.opening_bank_name</code>. 开户行名称
     */
    public final TableField<ClearMoneyLogRecord, String> OPENING_BANK_NAME = createField("opening_bank_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "开户行名称");

    /**
     * The column <code>st.clear_money_log.opening_bank_code</code>. 开户行行号
     */
    public final TableField<ClearMoneyLogRecord, String> OPENING_BANK_CODE = createField("opening_bank_code", org.jooq.impl.SQLDataType.VARCHAR(255), this, "开户行行号");

    /**
     * The column <code>st.clear_money_log.user_phone</code>.
     */
    public final TableField<ClearMoneyLogRecord, String> USER_PHONE = createField("user_phone", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>st.clear_money_log.clear_money_new_id</code>. 关联clear_money_new ID
     */
    public final TableField<ClearMoneyLogRecord, Integer> CLEAR_MONEY_NEW_ID = createField("clear_money_new_id", org.jooq.impl.SQLDataType.INTEGER, this, "关联clear_money_new ID");

    /**
     * Create a <code>st.clear_money_log</code> table reference
     */
    public ClearMoneyLog() {
        this(DSL.name("clear_money_log"), null);
    }

    /**
     * Create an aliased <code>st.clear_money_log</code> table reference
     */
    public ClearMoneyLog(String alias) {
        this(DSL.name(alias), CLEAR_MONEY_LOG);
    }

    /**
     * Create an aliased <code>st.clear_money_log</code> table reference
     */
    public ClearMoneyLog(Name alias) {
        this(alias, CLEAR_MONEY_LOG);
    }

    private ClearMoneyLog(Name alias, Table<ClearMoneyLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private ClearMoneyLog(Name alias, Table<ClearMoneyLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CLEAR_MONEY_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ClearMoneyLogRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CLEAR_MONEY_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ClearMoneyLogRecord> getPrimaryKey() {
        return Keys.KEY_CLEAR_MONEY_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ClearMoneyLogRecord>> getKeys() {
        return Arrays.<UniqueKey<ClearMoneyLogRecord>>asList(Keys.KEY_CLEAR_MONEY_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClearMoneyLog as(String alias) {
        return new ClearMoneyLog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClearMoneyLog as(Name alias) {
        return new ClearMoneyLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ClearMoneyLog rename(String name) {
        return new ClearMoneyLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ClearMoneyLog rename(Name name) {
        return new ClearMoneyLog(name, null);
    }
}
