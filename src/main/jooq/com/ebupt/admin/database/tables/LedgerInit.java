/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.LedgerInitRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LedgerInit extends TableImpl<LedgerInitRecord> {

    private static final long serialVersionUID = 109289629;

    /**
     * The reference instance of <code>st.ledger_init</code>
     */
    public static final LedgerInit LEDGER_INIT = new LedgerInit();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LedgerInitRecord> getRecordType() {
        return LedgerInitRecord.class;
    }

    /**
     * The column <code>st.ledger_init.id</code>.
     */
    public final TableField<LedgerInitRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>st.ledger_init.ledger_init_fee</code>. 台账实际余额初始值
     */
    public final TableField<LedgerInitRecord, BigDecimal> LEDGER_INIT_FEE = createField("ledger_init_fee", org.jooq.impl.SQLDataType.DECIMAL(50, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "台账实际余额初始值");

    /**
     * The column <code>st.ledger_init.line_id</code>.
     */
    public final TableField<LedgerInitRecord, Integer> LINE_ID = createField("line_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>st.ledger_init.business_id</code>.
     */
    public final TableField<LedgerInitRecord, Integer> BUSINESS_ID = createField("business_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>st.ledger_init.created_at</code>.
     */
    public final TableField<LedgerInitRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.ledger_init.updated_at</code>.
     */
    public final TableField<LedgerInitRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.ledger_init.enabled</code>.
     */
    public final TableField<LedgerInitRecord, Boolean> ENABLED = createField("enabled", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'1'", org.jooq.impl.SQLDataType.BIT)), this, "");

    /**
     * Create a <code>st.ledger_init</code> table reference
     */
    public LedgerInit() {
        this(DSL.name("ledger_init"), null);
    }

    /**
     * Create an aliased <code>st.ledger_init</code> table reference
     */
    public LedgerInit(String alias) {
        this(DSL.name(alias), LEDGER_INIT);
    }

    /**
     * Create an aliased <code>st.ledger_init</code> table reference
     */
    public LedgerInit(Name alias) {
        this(alias, LEDGER_INIT);
    }

    private LedgerInit(Name alias, Table<LedgerInitRecord> aliased) {
        this(alias, aliased, null);
    }

    private LedgerInit(Name alias, Table<LedgerInitRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LEDGER_INIT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<LedgerInitRecord, Integer> getIdentity() {
        return Keys.IDENTITY_LEDGER_INIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LedgerInitRecord> getPrimaryKey() {
        return Keys.KEY_LEDGER_INIT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LedgerInitRecord>> getKeys() {
        return Arrays.<UniqueKey<LedgerInitRecord>>asList(Keys.KEY_LEDGER_INIT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LedgerInit as(String alias) {
        return new LedgerInit(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LedgerInit as(Name alias) {
        return new LedgerInit(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LedgerInit rename(String name) {
        return new LedgerInit(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LedgerInit rename(Name name) {
        return new LedgerInit(name, null);
    }
}
