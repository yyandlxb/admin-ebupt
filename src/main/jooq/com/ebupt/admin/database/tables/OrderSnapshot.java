/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.OrderSnapshotRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderSnapshot extends TableImpl<OrderSnapshotRecord> {

    private static final long serialVersionUID = 1272505727;

    /**
     * The reference instance of <code>st.order_snapshot</code>
     */
    public static final OrderSnapshot ORDER_SNAPSHOT = new OrderSnapshot();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrderSnapshotRecord> getRecordType() {
        return OrderSnapshotRecord.class;
    }

    /**
     * The column <code>st.order_snapshot.id</code>.
     */
    public final TableField<OrderSnapshotRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>st.order_snapshot.order_code</code>. è®¢å•å·
     */
    public final TableField<OrderSnapshotRecord, String> ORDER_CODE = createField("order_code", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "è®¢å•å·");

    /**
     * The column <code>st.order_snapshot.order_status</code>. 1.å¾…ä»˜æ¬¾
2.å·²ä»˜æ¬¾
3.å·²å…³é—­
å·²é€€æ¬¾ 4.å·²å…³é—­5å·²æ‰“æ¬¾
     */
    public final TableField<OrderSnapshotRecord, String> ORDER_STATUS = createField("order_status", org.jooq.impl.SQLDataType.VARCHAR(2).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.VARCHAR)), this, "1.å¾…ä»˜æ¬¾\r\n2.å·²ä»˜æ¬¾\r\n3.å·²å…³é—­\r\nå·²é€€æ¬¾ 4.å·²å…³é—­5å·²æ‰“æ¬¾");

    /**
     * The column <code>st.order_snapshot.pay_form</code>. æ”¯ä»˜å½¢å¼ :  1 å…¨éƒ¨çŽ°ä»˜ 2 å…¨éƒ¨åˆ°ä»˜ 3 å›žå•ä»˜ 4 æ··åˆä»˜
     */
    public final TableField<OrderSnapshotRecord, String> PAY_FORM = createField("pay_form", org.jooq.impl.SQLDataType.VARCHAR(2).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.VARCHAR)), this, "æ”¯ä»˜å½¢å¼ :  1 å…¨éƒ¨çŽ°ä»˜ 2 å…¨éƒ¨åˆ°ä»˜ 3 å›žå•ä»˜ 4 æ··åˆä»˜");

    /**
     * The column <code>st.order_snapshot.paygo_fee</code>. çŽ°ä»˜è´¹ç”¨
     */
    public final TableField<OrderSnapshotRecord, BigDecimal> PAYGO_FEE = createField("paygo_fee", org.jooq.impl.SQLDataType.DECIMAL(20, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "çŽ°ä»˜è´¹ç”¨");

    /**
     * The column <code>st.order_snapshot.dest_fee</code>. åˆ°ä»˜è´¹ç”¨
     */
    public final TableField<OrderSnapshotRecord, BigDecimal> DEST_FEE = createField("dest_fee", org.jooq.impl.SQLDataType.DECIMAL(20, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "åˆ°ä»˜è´¹ç”¨");

    /**
     * The column <code>st.order_snapshot.remark</code>. ç‰¹æ®Šè¦æ±‚ï¼ˆå¤‡æ³¨ï¼‰
     */
    public final TableField<OrderSnapshotRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(255), this, "ç‰¹æ®Šè¦æ±‚ï¼ˆå¤‡æ³¨ï¼‰");

    /**
     * The column <code>st.order_snapshot.hm_fee</code>. å¹²çº¿è´¹ç”¨
     */
    public final TableField<OrderSnapshotRecord, BigDecimal> HM_FEE = createField("hm_fee", org.jooq.impl.SQLDataType.DECIMAL(20, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "å¹²çº¿è´¹ç”¨");

    /**
     * The column <code>st.order_snapshot.advance_fee</code>. åž«ä»˜è´¹ç”¨
     */
    public final TableField<OrderSnapshotRecord, BigDecimal> ADVANCE_FEE = createField("advance_fee", org.jooq.impl.SQLDataType.DECIMAL(20, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "åž«ä»˜è´¹ç”¨");

    /**
     * The column <code>st.order_snapshot.collection_fee</code>. ä»£æ”¶è´¹ç”¨
     */
    public final TableField<OrderSnapshotRecord, BigDecimal> COLLECTION_FEE = createField("collection_fee", org.jooq.impl.SQLDataType.DECIMAL(20, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "ä»£æ”¶è´¹ç”¨");

    /**
     * The column <code>st.order_snapshot.total_price</code>. æ€»é¢
     */
    public final TableField<OrderSnapshotRecord, BigDecimal> TOTAL_PRICE = createField("total_price", org.jooq.impl.SQLDataType.DECIMAL(20, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "æ€»é¢");

    /**
     * The column <code>st.order_snapshot.favour_price</code>. ä¼˜æƒ ä»·æ ¼
     */
    public final TableField<OrderSnapshotRecord, BigDecimal> FAVOUR_PRICE = createField("favour_price", org.jooq.impl.SQLDataType.DECIMAL(20, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "ä¼˜æƒ ä»·æ ¼");

    /**
     * The column <code>st.order_snapshot.pay_price</code>. æ”¯ä»˜é‡‘é¢
     */
    public final TableField<OrderSnapshotRecord, BigDecimal> PAY_PRICE = createField("pay_price", org.jooq.impl.SQLDataType.DECIMAL(20, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "æ”¯ä»˜é‡‘é¢");

    /**
     * The column <code>st.order_snapshot.create_time</code>. åˆ›å»ºæ—¶é—´ï¼ˆå‘å•æ—¶é—´ï¼‰
     */
    public final TableField<OrderSnapshotRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "åˆ›å»ºæ—¶é—´ï¼ˆå‘å•æ—¶é—´ï¼‰");

    /**
     * The column <code>st.order_snapshot.update_time</code>. æ›´æ–°æ—¶é—´
     */
    public final TableField<OrderSnapshotRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "æ›´æ–°æ—¶é—´");

    /**
     * The column <code>st.order_snapshot.ticket_status</code>. 1 æœªå‡ºç¥¨ 2 å·²å‡ºç¥¨
     */
    public final TableField<OrderSnapshotRecord, String> TICKET_STATUS = createField("ticket_status", org.jooq.impl.SQLDataType.VARCHAR(1).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.VARCHAR)), this, "1 æœªå‡ºç¥¨ 2 å·²å‡ºç¥¨");

    /**
     * The column <code>st.order_snapshot.insurance_fee</code>. ä¿é™©è´¹
     */
    public final TableField<OrderSnapshotRecord, BigDecimal> INSURANCE_FEE = createField("insurance_fee", org.jooq.impl.SQLDataType.DECIMAL(20, 2), this, "ä¿é™©è´¹");

    /**
     * The column <code>st.order_snapshot.insurance_amount</code>. ä¿é™©é‡‘é¢
     */
    public final TableField<OrderSnapshotRecord, BigDecimal> INSURANCE_AMOUNT = createField("insurance_amount", org.jooq.impl.SQLDataType.DECIMAL(20, 2), this, "ä¿é™©é‡‘é¢");

    /**
     * The column <code>st.order_snapshot.insure_price_fee</code>. ä¿ä»·è´¹
     */
    public final TableField<OrderSnapshotRecord, BigDecimal> INSURE_PRICE_FEE = createField("insure_price_fee", org.jooq.impl.SQLDataType.DECIMAL(20, 2), this, "ä¿ä»·è´¹");

    /**
     * The column <code>st.order_snapshot.insure_price_amount</code>.  ä¿ä»·é‡‘é¢
     */
    public final TableField<OrderSnapshotRecord, BigDecimal> INSURE_PRICE_AMOUNT = createField("insure_price_amount", org.jooq.impl.SQLDataType.DECIMAL(20, 2), this, " ä¿ä»·é‡‘é¢");

    /**
     * The column <code>st.order_snapshot.ticket_time</code>. åŠžç¥¨æ—¥æœŸ
     */
    public final TableField<OrderSnapshotRecord, Timestamp> TICKET_TIME = createField("ticket_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "åŠžç¥¨æ—¥æœŸ");

    /**
     * The column <code>st.order_snapshot.ticketor</code>. åŠžç¥¨äºº
     */
    public final TableField<OrderSnapshotRecord, String> TICKETOR = createField("ticketor", org.jooq.impl.SQLDataType.VARCHAR(50), this, "åŠžç¥¨äºº");

    /**
     * The column <code>st.order_snapshot.ticket_from</code>. 1 app 2 web
     */
    public final TableField<OrderSnapshotRecord, String> TICKET_FROM = createField("ticket_from", org.jooq.impl.SQLDataType.VARCHAR(1).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "1 app 2 web");

    /**
     * The column <code>st.order_snapshot.pay_method</code>. æ”¯ä»˜æ–¹å¼ï¼Œâ€œï¼Œâ€  1 å¾®ä¿¡æ‰«ç”¨æˆ· 2æ”¯ä»˜å®æ‰«ç”¨æˆ· 3å¾®ä¿¡æ‰«å•†æˆ· 4æ”¯ä»˜å®æ‰«å•†æˆ·  5pos 6çŽ°é‡‘7æ‰˜è¿éƒ¨çŽ°é‡‘
     */
    public final TableField<OrderSnapshotRecord, String> PAY_METHOD = createField("pay_method", org.jooq.impl.SQLDataType.VARCHAR(100), this, "æ”¯ä»˜æ–¹å¼ï¼Œâ€œï¼Œâ€  1 å¾®ä¿¡æ‰«ç”¨æˆ· 2æ”¯ä»˜å®æ‰«ç”¨æˆ· 3å¾®ä¿¡æ‰«å•†æˆ· 4æ”¯ä»˜å®æ‰«å•†æˆ·  5pos 6çŽ°é‡‘7æ‰˜è¿éƒ¨çŽ°é‡‘");

    /**
     * The column <code>st.order_snapshot.ticket_user_name</code>. æè´§äººäººå§“å
     */
    public final TableField<OrderSnapshotRecord, String> TICKET_USER_NAME = createField("ticket_user_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "æè´§äººäººå§“å");

    /**
     * The column <code>st.order_snapshot.ticket_user_id_card_num</code>. åŠžç¥¨äººèº«ä»½è¯å·
     */
    public final TableField<OrderSnapshotRecord, String> TICKET_USER_ID_CARD_NUM = createField("ticket_user_id_card_num", org.jooq.impl.SQLDataType.VARCHAR(255), this, "åŠžç¥¨äººèº«ä»½è¯å·");

    /**
     * The column <code>st.order_snapshot.ticket_user_phone</code>. åŠžç¥¨äººç”µè¯
     */
    public final TableField<OrderSnapshotRecord, String> TICKET_USER_PHONE = createField("ticket_user_phone", org.jooq.impl.SQLDataType.VARCHAR(255), this, "åŠžç¥¨äººç”µè¯");

    /**
     * The column <code>st.order_snapshot.ticket_user_id_card_address</code>. åŠžç¥¨äººèº«ä»½è¯åœ°å€
     */
    public final TableField<OrderSnapshotRecord, String> TICKET_USER_ID_CARD_ADDRESS = createField("ticket_user_id_card_address", org.jooq.impl.SQLDataType.VARCHAR(255), this, "åŠžç¥¨äººèº«ä»½è¯åœ°å€");

    /**
     * The column <code>st.order_snapshot.order_code_in</code>. åŽŸå·
     */
    public final TableField<OrderSnapshotRecord, String> ORDER_CODE_IN = createField("order_code_in", org.jooq.impl.SQLDataType.VARCHAR(255), this, "åŽŸå·");

    /**
     * The column <code>st.order_snapshot.flag</code>. 0 æœ‰æ•ˆ 1 æ— æ•ˆ
     */
    public final TableField<OrderSnapshotRecord, String> FLAG = createField("flag", org.jooq.impl.SQLDataType.VARCHAR(1).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "0 æœ‰æ•ˆ 1 æ— æ•ˆ");

    /**
     * The column <code>st.order_snapshot.snapshot_create_time</code>.
     */
    public final TableField<OrderSnapshotRecord, Timestamp> SNAPSHOT_CREATE_TIME = createField("snapshot_create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>st.order_snapshot.snapshot_type</code>. 1 åŠžç¥¨è®°å½•
     */
    public final TableField<OrderSnapshotRecord, Integer> SNAPSHOT_TYPE = createField("snapshot_type", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "1 åŠžç¥¨è®°å½•");

    /**
     * The column <code>st.order_snapshot.business_id</code>. è´§è¿éƒ¨ID
     */
    public final TableField<OrderSnapshotRecord, Integer> BUSINESS_ID = createField("business_id", org.jooq.impl.SQLDataType.INTEGER, this, "è´§è¿éƒ¨ID");

    /**
     * The column <code>st.order_snapshot.business_name</code>. å•†å®¶åç§°
     */
    public final TableField<OrderSnapshotRecord, String> BUSINESS_NAME = createField("business_name", org.jooq.impl.SQLDataType.VARCHAR(60), this, "å•†å®¶åç§°");

    /**
     * The column <code>st.order_snapshot.oper_id</code>. æ“ä½œäººid
     */
    public final TableField<OrderSnapshotRecord, Long> OPER_ID = createField("oper_id", org.jooq.impl.SQLDataType.BIGINT, this, "æ“ä½œäººid");

    /**
     * The column <code>st.order_snapshot.wx_pay_price</code>.
     */
    public final TableField<OrderSnapshotRecord, BigDecimal> WX_PAY_PRICE = createField("wx_pay_price", org.jooq.impl.SQLDataType.DECIMAL(20, 2), this, "");

    /**
     * The column <code>st.order_snapshot.zfb_pay_price</code>.
     */
    public final TableField<OrderSnapshotRecord, BigDecimal> ZFB_PAY_PRICE = createField("zfb_pay_price", org.jooq.impl.SQLDataType.DECIMAL(20, 2), this, "");

    /**
     * The column <code>st.order_snapshot.pos_pay_price</code>.
     */
    public final TableField<OrderSnapshotRecord, BigDecimal> POS_PAY_PRICE = createField("pos_pay_price", org.jooq.impl.SQLDataType.DECIMAL(20, 2), this, "");

    /**
     * The column <code>st.order_snapshot.cash_pay_price</code>.
     */
    public final TableField<OrderSnapshotRecord, BigDecimal> CASH_PAY_PRICE = createField("cash_pay_price", org.jooq.impl.SQLDataType.DECIMAL(20, 2), this, "");

    /**
     * The column <code>st.order_snapshot.tyb_cash_pay_price</code>.
     */
    public final TableField<OrderSnapshotRecord, BigDecimal> TYB_CASH_PAY_PRICE = createField("tyb_cash_pay_price", org.jooq.impl.SQLDataType.DECIMAL(20, 2), this, "");

    /**
     * The column <code>st.order_snapshot.snapshot_flag</code>. 0 正常 1 删除
     */
    public final TableField<OrderSnapshotRecord, Integer> SNAPSHOT_FLAG = createField("snapshot_flag", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "0 正常 1 删除");

    /**
     * Create a <code>st.order_snapshot</code> table reference
     */
    public OrderSnapshot() {
        this(DSL.name("order_snapshot"), null);
    }

    /**
     * Create an aliased <code>st.order_snapshot</code> table reference
     */
    public OrderSnapshot(String alias) {
        this(DSL.name(alias), ORDER_SNAPSHOT);
    }

    /**
     * Create an aliased <code>st.order_snapshot</code> table reference
     */
    public OrderSnapshot(Name alias) {
        this(alias, ORDER_SNAPSHOT);
    }

    private OrderSnapshot(Name alias, Table<OrderSnapshotRecord> aliased) {
        this(alias, aliased, null);
    }

    private OrderSnapshot(Name alias, Table<OrderSnapshotRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ORDER_SNAPSHOT_IDX_ORDER_CODE, Indexes.ORDER_SNAPSHOT_IDX_TICKETOR, Indexes.ORDER_SNAPSHOT_IDX_TICKET_TIME, Indexes.ORDER_SNAPSHOT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<OrderSnapshotRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ORDER_SNAPSHOT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OrderSnapshotRecord> getPrimaryKey() {
        return Keys.KEY_ORDER_SNAPSHOT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OrderSnapshotRecord>> getKeys() {
        return Arrays.<UniqueKey<OrderSnapshotRecord>>asList(Keys.KEY_ORDER_SNAPSHOT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderSnapshot as(String alias) {
        return new OrderSnapshot(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderSnapshot as(Name alias) {
        return new OrderSnapshot(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OrderSnapshot rename(String name) {
        return new OrderSnapshot(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OrderSnapshot rename(Name name) {
        return new OrderSnapshot(name, null);
    }
}
