/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.RefundRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Refund extends TableImpl<RefundRecord> {

    private static final long serialVersionUID = 668255650;

    /**
     * The reference instance of <code>st.refund</code>
     */
    public static final Refund REFUND = new Refund();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RefundRecord> getRecordType() {
        return RefundRecord.class;
    }

    /**
     * The column <code>st.refund.id</code>.
     */
    public final TableField<RefundRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>st.refund.no</code>. 退款单号
     */
    public final TableField<RefundRecord, String> NO = createField("no", org.jooq.impl.SQLDataType.VARCHAR(25).nullable(false), this, "退款单号");

    /**
     * The column <code>st.refund.order_id</code>.
     */
    public final TableField<RefundRecord, Integer> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>st.refund.payment_id</code>.
     */
    public final TableField<RefundRecord, Integer> PAYMENT_ID = createField("payment_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>st.refund.method</code>. 原支付方式。1：微信刷卡支付；2：支付宝条码支付
     */
    public final TableField<RefundRecord, Byte> METHOD = createField("method", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "原支付方式。1：微信刷卡支付；2：支付宝条码支付");

    /**
     * The column <code>st.refund.price</code>. 退款金额，单位为分
     */
    public final TableField<RefundRecord, Integer> PRICE = createField("price", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "退款金额，单位为分");

    /**
     * The column <code>st.refund.status</code>. 状态。0：未知状态；4：退款明确返回失败；6：主动撤销退款请求；7：发起了退款，等待确认结果；8：该笔退款已成功
     */
    public final TableField<RefundRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "状态。0：未知状态；4：退款明确返回失败；6：主动撤销退款请求；7：发起了退款，等待确认结果；8：该笔退款已成功");

    /**
     * The column <code>st.refund.reason</code>. 退款原因
     */
    public final TableField<RefundRecord, String> REASON = createField("reason", org.jooq.impl.SQLDataType.VARCHAR(50), this, "退款原因");

    /**
     * The column <code>st.refund.trade_no</code>. 支付平台交易号
     */
    public final TableField<RefundRecord, String> TRADE_NO = createField("trade_no", org.jooq.impl.SQLDataType.VARCHAR(64), this, "支付平台交易号");

    /**
     * The column <code>st.refund.refunded_at</code>. 实际退款时间
     */
    public final TableField<RefundRecord, Timestamp> REFUNDED_AT = createField("refunded_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "实际退款时间");

    /**
     * The column <code>st.refund.created_at</code>.
     */
    public final TableField<RefundRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.refund.updated_at</code>.
     */
    public final TableField<RefundRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>st.refund</code> table reference
     */
    public Refund() {
        this(DSL.name("refund"), null);
    }

    /**
     * Create an aliased <code>st.refund</code> table reference
     */
    public Refund(String alias) {
        this(DSL.name(alias), REFUND);
    }

    /**
     * Create an aliased <code>st.refund</code> table reference
     */
    public Refund(Name alias) {
        this(alias, REFUND);
    }

    private Refund(Name alias, Table<RefundRecord> aliased) {
        this(alias, aliased, null);
    }

    private Refund(Name alias, Table<RefundRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.REFUND_IDS_REFUND_EXPIRE, Indexes.REFUND_IDX_REFUND_NO, Indexes.REFUND_IDX_REFUND_ORDER_ID, Indexes.REFUND_IDX_REFUND_PAYMENT_ID, Indexes.REFUND_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RefundRecord, Integer> getIdentity() {
        return Keys.IDENTITY_REFUND;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RefundRecord> getPrimaryKey() {
        return Keys.KEY_REFUND_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RefundRecord>> getKeys() {
        return Arrays.<UniqueKey<RefundRecord>>asList(Keys.KEY_REFUND_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Refund as(String alias) {
        return new Refund(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Refund as(Name alias) {
        return new Refund(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Refund rename(String name) {
        return new Refund(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Refund rename(Name name) {
        return new Refund(name, null);
    }
}
