/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.PackOrderRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PackOrder extends TableImpl<PackOrderRecord> {

    private static final long serialVersionUID = -1216393771;

    /**
     * The reference instance of <code>st.pack_order</code>
     */
    public static final PackOrder PACK_ORDER = new PackOrder();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PackOrderRecord> getRecordType() {
        return PackOrderRecord.class;
    }

    /**
     * The column <code>st.pack_order.id</code>.
     */
    public final TableField<PackOrderRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>st.pack_order.pack_code</code>.
     */
    public final TableField<PackOrderRecord, String> PACK_CODE = createField("pack_code", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>st.pack_order.create_time</code>.
     */
    public final TableField<PackOrderRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.pack_order.depart_time</code>.
     */
    public final TableField<PackOrderRecord, Timestamp> DEPART_TIME = createField("depart_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>st.pack_order.arrive_time</code>.
     */
    public final TableField<PackOrderRecord, Timestamp> ARRIVE_TIME = createField("arrive_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>st.pack_order.driver_name</code>.
     */
    public final TableField<PackOrderRecord, String> DRIVER_NAME = createField("driver_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>st.pack_order.driver_phone</code>.
     */
    public final TableField<PackOrderRecord, String> DRIVER_PHONE = createField("driver_phone", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>st.pack_order.plate_number</code>.
     */
    public final TableField<PackOrderRecord, String> PLATE_NUMBER = createField("plate_number", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>st.pack_order.order_number</code>.
     */
    public final TableField<PackOrderRecord, Integer> ORDER_NUMBER = createField("order_number", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>st.pack_order.status</code>. 1 待发车 2 待送达 3 已送达
     */
    public final TableField<PackOrderRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR(2).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.VARCHAR)), this, "1 待发车 2 待送达 3 已送达");

    /**
     * The column <code>st.pack_order.goods_num</code>. 商品数
     */
    public final TableField<PackOrderRecord, Integer> GOODS_NUM = createField("goods_num", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "商品数");

    /**
     * The column <code>st.pack_order.total_price</code>. 运费
     */
    public final TableField<PackOrderRecord, BigDecimal> TOTAL_PRICE = createField("total_price", org.jooq.impl.SQLDataType.DECIMAL(20, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "运费");

    /**
     * The column <code>st.pack_order.pack_driver_fee</code>. 司机运费
     */
    public final TableField<PackOrderRecord, BigDecimal> PACK_DRIVER_FEE = createField("pack_driver_fee", org.jooq.impl.SQLDataType.DECIMAL(20, 2), this, "司机运费");

    /**
     * The column <code>st.pack_order.driver_id</code>. st_hm_driver表id
     */
    public final TableField<PackOrderRecord, Integer> DRIVER_ID = createField("driver_id", org.jooq.impl.SQLDataType.INTEGER, this, "st_hm_driver表id");

    /**
     * The column <code>st.pack_order.st_route_id</code>. 零担线路id
     */
    public final TableField<PackOrderRecord, Integer> ST_ROUTE_ID = createField("st_route_id", org.jooq.impl.SQLDataType.INTEGER, this, "零担线路id");

    /**
     * The column <code>st.pack_order.hm_route_id</code>. 干线线路id
     */
    public final TableField<PackOrderRecord, Integer> HM_ROUTE_ID = createField("hm_route_id", org.jooq.impl.SQLDataType.INTEGER, this, "干线线路id");

    /**
     * The column <code>st.pack_order.receiver_phone</code>. 收货人电话
     */
    public final TableField<PackOrderRecord, String> RECEIVER_PHONE = createField("receiver_phone", org.jooq.impl.SQLDataType.VARCHAR(60), this, "收货人电话");

    /**
     * The column <code>st.pack_order.hm_line_name</code>. 干线线路名称
     */
    public final TableField<PackOrderRecord, String> HM_LINE_NAME = createField("hm_line_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "干线线路名称");

    /**
     * The column <code>st.pack_order.hm_order_id</code>. 干线订单表id
     */
    public final TableField<PackOrderRecord, Integer> HM_ORDER_ID = createField("hm_order_id", org.jooq.impl.SQLDataType.INTEGER, this, "干线订单表id");

    /**
     * The column <code>st.pack_order.give_time</code>. 打款时间
     */
    public final TableField<PackOrderRecord, Timestamp> GIVE_TIME = createField("give_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "打款时间");

    /**
     * The column <code>st.pack_order.updated_at</code>.
     */
    public final TableField<PackOrderRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.pack_order.paid_at</code>.
     */
    public final TableField<PackOrderRecord, Timestamp> PAID_AT = createField("paid_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>st.pack_order.master_id</code>.
     */
    public final TableField<PackOrderRecord, Integer> MASTER_ID = createField("master_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>st.pack_order.merchant_id</code>.
     */
    public final TableField<PackOrderRecord, Integer> MERCHANT_ID = createField("merchant_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>st.pack_order</code> table reference
     */
    public PackOrder() {
        this(DSL.name("pack_order"), null);
    }

    /**
     * Create an aliased <code>st.pack_order</code> table reference
     */
    public PackOrder(String alias) {
        this(DSL.name(alias), PACK_ORDER);
    }

    /**
     * Create an aliased <code>st.pack_order</code> table reference
     */
    public PackOrder(Name alias) {
        this(alias, PACK_ORDER);
    }

    private PackOrder(Name alias, Table<PackOrderRecord> aliased) {
        this(alias, aliased, null);
    }

    private PackOrder(Name alias, Table<PackOrderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PACK_ORDER_PACK_CODE, Indexes.PACK_ORDER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PackOrderRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PACK_ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PackOrderRecord> getPrimaryKey() {
        return Keys.KEY_PACK_ORDER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PackOrderRecord>> getKeys() {
        return Arrays.<UniqueKey<PackOrderRecord>>asList(Keys.KEY_PACK_ORDER_PRIMARY, Keys.KEY_PACK_ORDER_PACK_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PackOrder as(String alias) {
        return new PackOrder(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PackOrder as(Name alias) {
        return new PackOrder(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PackOrder rename(String name) {
        return new PackOrder(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PackOrder rename(Name name) {
        return new PackOrder(name, null);
    }
}
