/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.CwUserRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CwUser extends TableImpl<CwUserRecord> {

    private static final long serialVersionUID = -214447715;

    /**
     * The reference instance of <code>st.cw_user</code>
     */
    public static final CwUser CW_USER = new CwUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CwUserRecord> getRecordType() {
        return CwUserRecord.class;
    }

    /**
     * The column <code>st.cw_user.id</code>.
     */
    public final TableField<CwUserRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>st.cw_user.mailbox</code>. 邮箱
     */
    public final TableField<CwUserRecord, String> MAILBOX = createField("mailbox", org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "邮箱");

    /**
     * The column <code>st.cw_user.name</code>. 用户名
     */
    public final TableField<CwUserRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(20), this, "用户名");

    /**
     * The column <code>st.cw_user.password</code>. 密码
     */
    public final TableField<CwUserRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR(255), this, "密码");

    /**
     * The column <code>st.cw_user.jurisdiction</code>. 权限用户类型
     */
    public final TableField<CwUserRecord, Integer> JURISDICTION = createField("jurisdiction", org.jooq.impl.SQLDataType.INTEGER, this, "权限用户类型");

    /**
     * The column <code>st.cw_user.phone</code>. 手机号
     */
    public final TableField<CwUserRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.CHAR(20), this, "手机号");

    /**
     * The column <code>st.cw_user.create_time</code>. 创建时间
     */
    public final TableField<CwUserRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>st.cw_user.route</code>. 线路
     */
    public final TableField<CwUserRecord, String> ROUTE = createField("route", org.jooq.impl.SQLDataType.VARCHAR(2000), this, "线路");

    /**
     * The column <code>st.cw_user.is_delete</code>. 0:有效  1：失效
     */
    public final TableField<CwUserRecord, Integer> IS_DELETE = createField("is_delete", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "0:有效  1：失效");

    /**
     * The column <code>st.cw_user.code</code>. 证码验
     */
    public final TableField<CwUserRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(33), this, "证码验");

    /**
     * The column <code>st.cw_user.route_id</code>. 路线id
     */
    public final TableField<CwUserRecord, String> ROUTE_ID = createField("route_id", org.jooq.impl.SQLDataType.VARCHAR(3300), this, "路线id");

    /**
     * Create a <code>st.cw_user</code> table reference
     */
    public CwUser() {
        this(DSL.name("cw_user"), null);
    }

    /**
     * Create an aliased <code>st.cw_user</code> table reference
     */
    public CwUser(String alias) {
        this(DSL.name(alias), CW_USER);
    }

    /**
     * Create an aliased <code>st.cw_user</code> table reference
     */
    public CwUser(Name alias) {
        this(alias, CW_USER);
    }

    private CwUser(Name alias, Table<CwUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private CwUser(Name alias, Table<CwUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CW_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CwUserRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CW_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CwUserRecord> getPrimaryKey() {
        return Keys.KEY_CW_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CwUserRecord>> getKeys() {
        return Arrays.<UniqueKey<CwUserRecord>>asList(Keys.KEY_CW_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CwUser as(String alias) {
        return new CwUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CwUser as(Name alias) {
        return new CwUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CwUser rename(String name) {
        return new CwUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CwUser rename(Name name) {
        return new CwUser(name, null);
    }
}
