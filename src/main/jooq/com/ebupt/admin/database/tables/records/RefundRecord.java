/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables.records;


import com.ebupt.admin.database.tables.Refund;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RefundRecord extends UpdatableRecordImpl<RefundRecord> implements Record12<Integer, String, Integer, Integer, Byte, Integer, Byte, String, String, Timestamp, Timestamp, Timestamp> {

    private static final long serialVersionUID = 6378154;

    /**
     * Setter for <code>st.refund.id</code>.
     */
    public RefundRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>st.refund.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>st.refund.no</code>. 退款单号
     */
    public RefundRecord setNo(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>st.refund.no</code>. 退款单号
     */
    public String getNo() {
        return (String) get(1);
    }

    /**
     * Setter for <code>st.refund.order_id</code>.
     */
    public RefundRecord setOrderId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>st.refund.order_id</code>.
     */
    public Integer getOrderId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>st.refund.payment_id</code>.
     */
    public RefundRecord setPaymentId(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>st.refund.payment_id</code>.
     */
    public Integer getPaymentId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>st.refund.method</code>. 原支付方式。1：微信刷卡支付；2：支付宝条码支付
     */
    public RefundRecord setMethod(Byte value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>st.refund.method</code>. 原支付方式。1：微信刷卡支付；2：支付宝条码支付
     */
    public Byte getMethod() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>st.refund.price</code>. 退款金额，单位为分
     */
    public RefundRecord setPrice(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>st.refund.price</code>. 退款金额，单位为分
     */
    public Integer getPrice() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>st.refund.status</code>. 状态。0：未知状态；4：退款明确返回失败；6：主动撤销退款请求；7：发起了退款，等待确认结果；8：该笔退款已成功
     */
    public RefundRecord setStatus(Byte value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>st.refund.status</code>. 状态。0：未知状态；4：退款明确返回失败；6：主动撤销退款请求；7：发起了退款，等待确认结果；8：该笔退款已成功
     */
    public Byte getStatus() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>st.refund.reason</code>. 退款原因
     */
    public RefundRecord setReason(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>st.refund.reason</code>. 退款原因
     */
    public String getReason() {
        return (String) get(7);
    }

    /**
     * Setter for <code>st.refund.trade_no</code>. 支付平台交易号
     */
    public RefundRecord setTradeNo(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>st.refund.trade_no</code>. 支付平台交易号
     */
    public String getTradeNo() {
        return (String) get(8);
    }

    /**
     * Setter for <code>st.refund.refunded_at</code>. 实际退款时间
     */
    public RefundRecord setRefundedAt(Timestamp value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>st.refund.refunded_at</code>. 实际退款时间
     */
    public Timestamp getRefundedAt() {
        return (Timestamp) get(9);
    }

    /**
     * Setter for <code>st.refund.created_at</code>.
     */
    public RefundRecord setCreatedAt(Timestamp value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>st.refund.created_at</code>.
     */
    public Timestamp getCreatedAt() {
        return (Timestamp) get(10);
    }

    /**
     * Setter for <code>st.refund.updated_at</code>.
     */
    public RefundRecord setUpdatedAt(Timestamp value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>st.refund.updated_at</code>.
     */
    public Timestamp getUpdatedAt() {
        return (Timestamp) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<Integer, String, Integer, Integer, Byte, Integer, Byte, String, String, Timestamp, Timestamp, Timestamp> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<Integer, String, Integer, Integer, Byte, Integer, Byte, String, String, Timestamp, Timestamp, Timestamp> valuesRow() {
        return (Row12) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Refund.REFUND.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Refund.REFUND.NO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Refund.REFUND.ORDER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Refund.REFUND.PAYMENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field5() {
        return Refund.REFUND.METHOD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Refund.REFUND.PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field7() {
        return Refund.REFUND.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Refund.REFUND.REASON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return Refund.REFUND.TRADE_NO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field10() {
        return Refund.REFUND.REFUNDED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field11() {
        return Refund.REFUND.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field12() {
        return Refund.REFUND.UPDATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getNo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getOrderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getPaymentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component5() {
        return getMethod();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component7() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getReason();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getTradeNo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component10() {
        return getRefundedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component11() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component12() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getNo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getOrderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getPaymentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value5() {
        return getMethod();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value7() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getReason();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getTradeNo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value10() {
        return getRefundedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value11() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value12() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RefundRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RefundRecord value2(String value) {
        setNo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RefundRecord value3(Integer value) {
        setOrderId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RefundRecord value4(Integer value) {
        setPaymentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RefundRecord value5(Byte value) {
        setMethod(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RefundRecord value6(Integer value) {
        setPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RefundRecord value7(Byte value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RefundRecord value8(String value) {
        setReason(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RefundRecord value9(String value) {
        setTradeNo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RefundRecord value10(Timestamp value) {
        setRefundedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RefundRecord value11(Timestamp value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RefundRecord value12(Timestamp value) {
        setUpdatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RefundRecord values(Integer value1, String value2, Integer value3, Integer value4, Byte value5, Integer value6, Byte value7, String value8, String value9, Timestamp value10, Timestamp value11, Timestamp value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RefundRecord
     */
    public RefundRecord() {
        super(Refund.REFUND);
    }

    /**
     * Create a detached, initialised RefundRecord
     */
    public RefundRecord(Integer id, String no, Integer orderId, Integer paymentId, Byte method, Integer price, Byte status, String reason, String tradeNo, Timestamp refundedAt, Timestamp createdAt, Timestamp updatedAt) {
        super(Refund.REFUND);

        set(0, id);
        set(1, no);
        set(2, orderId);
        set(3, paymentId);
        set(4, method);
        set(5, price);
        set(6, status);
        set(7, reason);
        set(8, tradeNo);
        set(9, refundedAt);
        set(10, createdAt);
        set(11, updatedAt);
    }
}
