/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.CompanyInfoRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompanyInfo extends TableImpl<CompanyInfoRecord> {

    private static final long serialVersionUID = -888683703;

    /**
     * The reference instance of <code>st.company_info</code>
     */
    public static final CompanyInfo COMPANY_INFO = new CompanyInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CompanyInfoRecord> getRecordType() {
        return CompanyInfoRecord.class;
    }

    /**
     * The column <code>st.company_info.c_name</code>.
     */
    public final TableField<CompanyInfoRecord, String> C_NAME = createField("c_name", org.jooq.impl.SQLDataType.VARCHAR(300), this, "");

    /**
     * The column <code>st.company_info.id</code>.
     */
    public final TableField<CompanyInfoRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>st.company_info.status</code>. 0:正常 1：删除
     */
    public final TableField<CompanyInfoRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "0:正常 1：删除");

    /**
     * The column <code>st.company_info.create_time</code>.
     */
    public final TableField<CompanyInfoRecord, String> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>st.company_info</code> table reference
     */
    public CompanyInfo() {
        this(DSL.name("company_info"), null);
    }

    /**
     * Create an aliased <code>st.company_info</code> table reference
     */
    public CompanyInfo(String alias) {
        this(DSL.name(alias), COMPANY_INFO);
    }

    /**
     * Create an aliased <code>st.company_info</code> table reference
     */
    public CompanyInfo(Name alias) {
        this(alias, COMPANY_INFO);
    }

    private CompanyInfo(Name alias, Table<CompanyInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private CompanyInfo(Name alias, Table<CompanyInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.COMPANY_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CompanyInfoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COMPANY_INFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CompanyInfoRecord> getPrimaryKey() {
        return Keys.KEY_COMPANY_INFO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CompanyInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<CompanyInfoRecord>>asList(Keys.KEY_COMPANY_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CompanyInfo as(String alias) {
        return new CompanyInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CompanyInfo as(Name alias) {
        return new CompanyInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CompanyInfo rename(String name) {
        return new CompanyInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CompanyInfo rename(Name name) {
        return new CompanyInfo(name, null);
    }
}
