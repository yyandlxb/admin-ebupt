/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.PackPaymentRefundRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PackPaymentRefund extends TableImpl<PackPaymentRefundRecord> {

    private static final long serialVersionUID = 2059598335;

    /**
     * The reference instance of <code>st.pack_payment_refund</code>
     */
    public static final PackPaymentRefund PACK_PAYMENT_REFUND = new PackPaymentRefund();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PackPaymentRefundRecord> getRecordType() {
        return PackPaymentRefundRecord.class;
    }

    /**
     * The column <code>st.pack_payment_refund.id</code>.
     */
    public final TableField<PackPaymentRefundRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>st.pack_payment_refund.pack_id</code>.
     */
    public final TableField<PackPaymentRefundRecord, Integer> PACK_ID = createField("pack_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>st.pack_payment_refund.line_id</code>.
     */
    public final TableField<PackPaymentRefundRecord, Integer> LINE_ID = createField("line_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>st.pack_payment_refund.line_name</code>.
     */
    public final TableField<PackPaymentRefundRecord, String> LINE_NAME = createField("line_name", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>st.pack_payment_refund.business_id</code>.
     */
    public final TableField<PackPaymentRefundRecord, Integer> BUSINESS_ID = createField("business_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>st.pack_payment_refund.business_name</code>.
     */
    public final TableField<PackPaymentRefundRecord, String> BUSINESS_NAME = createField("business_name", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>st.pack_payment_refund.status</code>. 1:待打款 2:打款中 3:打款成功 4:打款失败5:已拒绝
     */
    public final TableField<PackPaymentRefundRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "1:待打款 2:打款中 3:打款成功 4:打款失败5:已拒绝");

    /**
     * The column <code>st.pack_payment_refund.return_money</code>. 打款金额（以分为单位）
     */
    public final TableField<PackPaymentRefundRecord, Integer> RETURN_MONEY = createField("return_money", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "打款金额（以分为单位）");

    /**
     * The column <code>st.pack_payment_refund.message</code>. 拒绝原因
     */
    public final TableField<PackPaymentRefundRecord, String> MESSAGE = createField("message", org.jooq.impl.SQLDataType.VARCHAR(100), this, "拒绝原因");

    /**
     * The column <code>st.pack_payment_refund.remark</code>. 备注
     */
    public final TableField<PackPaymentRefundRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(100), this, "备注");

    /**
     * The column <code>st.pack_payment_refund.enabled</code>.
     */
    public final TableField<PackPaymentRefundRecord, Boolean> ENABLED = createField("enabled", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "");

    /**
     * The column <code>st.pack_payment_refund.can_payment_at</code>. 可以打款日期
     */
    public final TableField<PackPaymentRefundRecord, Timestamp> CAN_PAYMENT_AT = createField("can_payment_at", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "可以打款日期");

    /**
     * The column <code>st.pack_payment_refund.actual_payment_at</code>. 成功打款时间
     */
    public final TableField<PackPaymentRefundRecord, Timestamp> ACTUAL_PAYMENT_AT = createField("actual_payment_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "成功打款时间");

    /**
     * The column <code>st.pack_payment_refund.created_at</code>.
     */
    public final TableField<PackPaymentRefundRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.pack_payment_refund.updated_at</code>.
     */
    public final TableField<PackPaymentRefundRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.pack_payment_refund.no</code>.
     */
    public final TableField<PackPaymentRefundRecord, String> NO = createField("no", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * Create a <code>st.pack_payment_refund</code> table reference
     */
    public PackPaymentRefund() {
        this(DSL.name("pack_payment_refund"), null);
    }

    /**
     * Create an aliased <code>st.pack_payment_refund</code> table reference
     */
    public PackPaymentRefund(String alias) {
        this(DSL.name(alias), PACK_PAYMENT_REFUND);
    }

    /**
     * Create an aliased <code>st.pack_payment_refund</code> table reference
     */
    public PackPaymentRefund(Name alias) {
        this(alias, PACK_PAYMENT_REFUND);
    }

    private PackPaymentRefund(Name alias, Table<PackPaymentRefundRecord> aliased) {
        this(alias, aliased, null);
    }

    private PackPaymentRefund(Name alias, Table<PackPaymentRefundRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PACK_PAYMENT_REFUND_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PackPaymentRefundRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PACK_PAYMENT_REFUND;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PackPaymentRefundRecord> getPrimaryKey() {
        return Keys.KEY_PACK_PAYMENT_REFUND_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PackPaymentRefundRecord>> getKeys() {
        return Arrays.<UniqueKey<PackPaymentRefundRecord>>asList(Keys.KEY_PACK_PAYMENT_REFUND_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PackPaymentRefund as(String alias) {
        return new PackPaymentRefund(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PackPaymentRefund as(Name alias) {
        return new PackPaymentRefund(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PackPaymentRefund rename(String name) {
        return new PackPaymentRefund(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PackPaymentRefund rename(Name name) {
        return new PackPaymentRefund(name, null);
    }
}
