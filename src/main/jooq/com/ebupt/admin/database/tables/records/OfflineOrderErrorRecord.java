/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables.records;


import com.ebupt.admin.database.tables.OfflineOrderError;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OfflineOrderErrorRecord extends UpdatableRecordImpl<OfflineOrderErrorRecord> implements Record8<Integer, String, Timestamp, Timestamp, String, String, String, String> {

    private static final long serialVersionUID = 1383488201;

    /**
     * Setter for <code>st.offline_order_error.id</code>.
     */
    public OfflineOrderErrorRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>st.offline_order_error.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>st.offline_order_error.error_info</code>. 异常信息
     */
    public OfflineOrderErrorRecord setErrorInfo(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>st.offline_order_error.error_info</code>. 异常信息
     */
    public String getErrorInfo() {
        return (String) get(1);
    }

    /**
     * Setter for <code>st.offline_order_error.app_create_time</code>.
     */
    public OfflineOrderErrorRecord setAppCreateTime(Timestamp value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>st.offline_order_error.app_create_time</code>.
     */
    public Timestamp getAppCreateTime() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>st.offline_order_error.server_create_time</code>.
     */
    public OfflineOrderErrorRecord setServerCreateTime(Timestamp value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>st.offline_order_error.server_create_time</code>.
     */
    public Timestamp getServerCreateTime() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>st.offline_order_error.business_code</code>.
     */
    public OfflineOrderErrorRecord setBusinessCode(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>st.offline_order_error.business_code</code>.
     */
    public String getBusinessCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>st.offline_order_error.pos_code</code>.
     */
    public OfflineOrderErrorRecord setPosCode(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>st.offline_order_error.pos_code</code>.
     */
    public String getPosCode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>st.offline_order_error.line_code</code>.
     */
    public OfflineOrderErrorRecord setLineCode(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>st.offline_order_error.line_code</code>.
     */
    public String getLineCode() {
        return (String) get(6);
    }

    /**
     * Setter for <code>st.offline_order_error.uuid</code>.
     */
    public OfflineOrderErrorRecord setUuid(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>st.offline_order_error.uuid</code>.
     */
    public String getUuid() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, Timestamp, Timestamp, String, String, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, Timestamp, Timestamp, String, String, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return OfflineOrderError.OFFLINE_ORDER_ERROR.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return OfflineOrderError.OFFLINE_ORDER_ERROR.ERROR_INFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return OfflineOrderError.OFFLINE_ORDER_ERROR.APP_CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return OfflineOrderError.OFFLINE_ORDER_ERROR.SERVER_CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return OfflineOrderError.OFFLINE_ORDER_ERROR.BUSINESS_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return OfflineOrderError.OFFLINE_ORDER_ERROR.POS_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return OfflineOrderError.OFFLINE_ORDER_ERROR.LINE_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return OfflineOrderError.OFFLINE_ORDER_ERROR.UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getErrorInfo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getAppCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component4() {
        return getServerCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getBusinessCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getPosCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getLineCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getErrorInfo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getAppCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getServerCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getBusinessCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getPosCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getLineCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OfflineOrderErrorRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OfflineOrderErrorRecord value2(String value) {
        setErrorInfo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OfflineOrderErrorRecord value3(Timestamp value) {
        setAppCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OfflineOrderErrorRecord value4(Timestamp value) {
        setServerCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OfflineOrderErrorRecord value5(String value) {
        setBusinessCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OfflineOrderErrorRecord value6(String value) {
        setPosCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OfflineOrderErrorRecord value7(String value) {
        setLineCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OfflineOrderErrorRecord value8(String value) {
        setUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OfflineOrderErrorRecord values(Integer value1, String value2, Timestamp value3, Timestamp value4, String value5, String value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OfflineOrderErrorRecord
     */
    public OfflineOrderErrorRecord() {
        super(OfflineOrderError.OFFLINE_ORDER_ERROR);
    }

    /**
     * Create a detached, initialised OfflineOrderErrorRecord
     */
    public OfflineOrderErrorRecord(Integer id, String errorInfo, Timestamp appCreateTime, Timestamp serverCreateTime, String businessCode, String posCode, String lineCode, String uuid) {
        super(OfflineOrderError.OFFLINE_ORDER_ERROR);

        set(0, id);
        set(1, errorInfo);
        set(2, appCreateTime);
        set(3, serverCreateTime);
        set(4, businessCode);
        set(5, posCode);
        set(6, lineCode);
        set(7, uuid);
    }
}
