/*
 * This file is generated by jOOQ.
*/
package com.ebupt.admin.database.tables;


import com.ebupt.admin.database.Indexes;
import com.ebupt.admin.database.Keys;
import com.ebupt.admin.database.St;
import com.ebupt.admin.database.tables.records.PaymentHistoryRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentHistory extends TableImpl<PaymentHistoryRecord> {

    private static final long serialVersionUID = 875065527;

    /**
     * The reference instance of <code>st.payment_history</code>
     */
    public static final PaymentHistory PAYMENT_HISTORY = new PaymentHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PaymentHistoryRecord> getRecordType() {
        return PaymentHistoryRecord.class;
    }

    /**
     * The column <code>st.payment_history.id</code>.
     */
    public final TableField<PaymentHistoryRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>st.payment_history.order_id</code>.
     */
    public final TableField<PaymentHistoryRecord, Integer> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>st.payment_history.method</code>. 支付方式
     */
    public final TableField<PaymentHistoryRecord, Byte> METHOD = createField("method", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "支付方式");

    /**
     * The column <code>st.payment_history.operator_id</code>. 操作人
     */
    public final TableField<PaymentHistoryRecord, Integer> OPERATOR_ID = createField("operator_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "操作人");

    /**
     * The column <code>st.payment_history.created_at</code>.
     */
    public final TableField<PaymentHistoryRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>st.payment_history.updated_at</code>.
     */
    public final TableField<PaymentHistoryRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>st.payment_history</code> table reference
     */
    public PaymentHistory() {
        this(DSL.name("payment_history"), null);
    }

    /**
     * Create an aliased <code>st.payment_history</code> table reference
     */
    public PaymentHistory(String alias) {
        this(DSL.name(alias), PAYMENT_HISTORY);
    }

    /**
     * Create an aliased <code>st.payment_history</code> table reference
     */
    public PaymentHistory(Name alias) {
        this(alias, PAYMENT_HISTORY);
    }

    private PaymentHistory(Name alias, Table<PaymentHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private PaymentHistory(Name alias, Table<PaymentHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return St.ST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PAYMENT_HISTORY_IDX_PAYMENT_HISTORY_ORDER, Indexes.PAYMENT_HISTORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PaymentHistoryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PAYMENT_HISTORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PaymentHistoryRecord> getPrimaryKey() {
        return Keys.KEY_PAYMENT_HISTORY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PaymentHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<PaymentHistoryRecord>>asList(Keys.KEY_PAYMENT_HISTORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentHistory as(String alias) {
        return new PaymentHistory(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentHistory as(Name alias) {
        return new PaymentHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PaymentHistory rename(String name) {
        return new PaymentHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PaymentHistory rename(Name name) {
        return new PaymentHistory(name, null);
    }
}
